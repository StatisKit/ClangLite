sudo: required
dist: trusty
language: cpp

services:
  - docker

before_install:
    - if [[ "$TRAVIS_OS_NAME" = "linux" ]]; then
        wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
      elif [[ "$TRAVIS_OS_NAME" = "osx" ]]; then
        curl https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -o miniconda.sh;
      fi
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH=$HOME/miniconda/bin:$PATH
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    - conda info -a
    - conda install conda-build
    - pip install python-coveralls
    - conda install libclang -c statiskit

install:
  - llvm-config --libs
  - llc -version
  - clang++ -x c++ -v -E /dev/null
  - clang -x c -v -E /dev/null

before_script:
  - conda build conda/libclanglite -c statiskit --no-test
  - conda build conda/python-clanglite -c statiskit --no-test

script:
  - conda install python-clanglite -c statiskit --use-local
  - python -c "from clanglite import *"
  
after_success:
  - coveralls
  - if [[ "$TRAVIS_BRANCH" = "master" ]] && [[ "$TRAVIS_PULL_REQUEST" = "false" ]]; then
      conda install anaconda-client;
      anaconda login --username "$ANACONDA_USERNAME" --password "$ANACONDA_PASSWORD";
      CONDA_FILE=`conda build conda/libclanglite --output`; 
      anaconda upload --user statiskit ${CONDA_FILE%%} --force;
      CONDA_FILE=`conda build conda/python-clanglite --output`; 
      anaconda upload --user statiskit ${CONDA_FILE%%} --force;
      docker build --build-arg BUILD="false" -t statiskit/pyclanglite:trusty .;
      docker login -e="$DOCKER_EMAIL" -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
      docker push statiskit/pyclanglite:trusty;
    fi
