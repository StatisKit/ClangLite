#include "_clanglite.h"

void  (::clang::Sema::*method_pointer_22f5fe66f9905c40974d1b86757687f8)()= &::clang::Sema::LoadExternalWeakUndeclaredIdentifiers;
void  (::clang::Sema::*method_pointer_2f934e9e32ad50439cb5864817cdfce7)(unsigned int )= &::clang::Sema::EmitCurrentDiagnostic;
void  (::clang::Sema::*method_pointer_943ef8657bbc571d8c7084825a332db4)(class ::llvm::StringRef , class ::clang::QualType )= &::clang::Sema::addImplicitTypedef;
void  (::clang::Sema::*method_pointer_7f1b7667472f57e885106db08339caf5)()= &::clang::Sema::Initialize;
class ::clang::SourceManager & (::clang::Sema::*method_pointer_3236edd388a25058be6c05f55b222fbb)()const= &::clang::Sema::getSourceManager;
class ::clang::ASTContext & (::clang::Sema::*method_pointer_6322bef8fbf45a2b9ff7efabefbaee64)()const= &::clang::Sema::getASTContext;
void  (::clang::Sema::*method_pointer_d66ccf302783573e9ec92bda3d5dbf04)()const= &::clang::Sema::PrintStats;
bool  (::clang::Sema::*method_pointer_5504fe0e70605e56b5eb41879dbcf28d)(class ::clang::SourceLocation &, class ::llvm::StringRef )= &::clang::Sema::findMacroSpelling;
class ::clang::SourceLocation  (::clang::Sema::*method_pointer_d03dac7c85e4510cbe943273020f3349)(class ::clang::SourceLocation , unsigned int )= &::clang::Sema::getLocForEndOfToken;
void  (::clang::Sema::*method_pointer_834b613425c45804ad54f9f784eaa6cf)()= &::clang::Sema::emitAndClearUnusedLocalTypedefWarnings;
void  (::clang::Sema::*method_pointer_1a330bd9c1495b6581a6db364474b269)()= &::clang::Sema::ActOnEndOfTranslationUnit;
void  (::clang::Sema::*method_pointer_99dbb289ba78560d89cd1681fe607819)()= &::clang::Sema::CheckDelegatingCtorCycles;
void  (::clang::Sema::*method_pointer_03ed71dbfa01552498d9b694d33b8621)()= &::clang::Sema::PushFunctionScope;
void  (::clang::Sema::*method_pointer_f64095376b565784aab76e4323820792)(unsigned int )= &::clang::Sema::RecordParsingTemplateParameterDepth;
void  (::clang::Sema::*method_pointer_961e05c9712f5c09b1c34dfb4f21910d)()= &::clang::Sema::PushCompoundScope;
void  (::clang::Sema::*method_pointer_52afdcb34dc657de867a9785ed52a74d)()= &::clang::Sema::PopCompoundScope;
bool  (::clang::Sema::*method_pointer_af582f3fa7cf5156b57e8681f942c16f)()const= &::clang::Sema::hasAnyUnrecoverableErrorsInThisFunction;
bool  (::clang::Sema::*method_pointer_8d1534aa50355ed0b700f2322937e211)(class ::clang::QualType , class ::clang::SourceLocation )= &::clang::Sema::CheckFunctionReturnType;
class ::clang::QualType  (::clang::Sema::*method_pointer_4182b635783f5f48a636175391c0e2ab)(class ::clang::QualType )= &::clang::Sema::BuildParenType;
class ::clang::QualType  (::clang::Sema::*method_pointer_bdafebd515dc542b8a4b70c9dde20769)(class ::clang::QualType , class ::clang::SourceLocation )= &::clang::Sema::BuildAtomicType;
class ::clang::QualType  (::clang::Sema::*method_pointer_84b361f705105b7785cdb86fd6a465ee)(class ::clang::QualType , class ::clang::SourceLocation )= &::clang::Sema::BuildReadPipeType;
class ::clang::QualType  (::clang::Sema::*method_pointer_d9a428944f1e5b2284298a4c12bc6d24)(class ::clang::QualType , class ::clang::SourceLocation )= &::clang::Sema::BuildWritePipeType;
class ::clang::FunctionProtoType const * (::clang::Sema::*method_pointer_33bc59270e775b95beb871f49bca7d69)(class ::clang::SourceLocation , class ::clang::FunctionProtoType const *)= &::clang::Sema::ResolveExceptionSpec;
bool  (::clang::Sema::*method_pointer_3587824f8c6d5c018cc24bf685464d50)(class ::clang::QualType )= &::clang::Sema::CheckDistantExceptionSpec;
bool  (::clang::Sema::*method_pointer_7f5ed84dad115d5b9014f540afbd8e68)(class ::clang::FunctionDecl *, class ::clang::FunctionDecl *)= &::clang::Sema::CheckEquivalentExceptionSpec;
bool  (::clang::Sema::*method_pointer_b412139b0848564690639f6d705fada8)(class ::clang::FunctionProtoType const *, class ::clang::SourceLocation , class ::clang::FunctionProtoType const *, class ::clang::SourceLocation )= &::clang::Sema::CheckEquivalentExceptionSpec;
int  (*method_pointer_35939176278055b0a7187ebfd4fbeb03)(int )= ::clang::Sema::getPrintable;
unsigned int  (*method_pointer_bd37f891e95757629269275ebb095d3d)(unsigned int )= ::clang::Sema::getPrintable;
bool  (*method_pointer_ccef913c3f835a569c01d8f3a2653a8a)(bool )= ::clang::Sema::getPrintable;
class ::llvm::StringRef  (*method_pointer_24b3dd53b1005e0ab84736554d1be342)(class ::llvm::StringRef )= ::clang::Sema::getPrintable;
class ::clang::QualType  (*method_pointer_04a72f55f6ce516eb11b7c90d77cb9e5)(class ::clang::QualType )= ::clang::Sema::getPrintable;
void  (::clang::Sema::*method_pointer_da5c7bd9645e584d9ef1722c009264fd)(class ::clang::NamedDecl *, class ::clang::SourceLocation )= &::clang::Sema::makeMergedDefinitionVisible;
bool  (::clang::Sema::*method_pointer_3b9cb409097a536e812df153900a6024)(class ::clang::NamedDecl const *)= &::clang::Sema::isVisible;
bool  (::clang::Sema::*method_pointer_de545c3f21c15944938c05e3f6c3c578)(class ::clang::NamedDecl *)= &::clang::Sema::hasVisibleMergedDefinition;
bool  (::clang::Sema::*method_pointer_57008e5f52d45a47b1ecfe3557de7290)(class ::clang::NamedDecl const *)= &::clang::Sema::hasVisibleDefinition;
bool  (::clang::Sema::*method_pointer_efa6570cb0ce5708a5709ef26a1d059f)(class ::clang::NamedDecl const *, class ::clang::NamedDecl const *)= &::clang::Sema::isEquivalentInternalLinkageDeclaration;
bool  (::clang::Sema::*method_pointer_af4465316a695b678643e1e484355fcf)(class ::clang::SourceLocation , class ::clang::QualType )= &::clang::Sema::isCompleteType;
bool  (::clang::Sema::*method_pointer_434e85f81c1c5e9bb14809af58c0edf6)(class ::clang::SourceLocation , class ::clang::QualType , unsigned int )= &::clang::Sema::RequireCompleteType;
bool  (::clang::Sema::*method_pointer_f51212f0c723581f9a13e8e3c9e0a397)(class ::clang::SourceLocation , class ::clang::QualType , unsigned int )= &::clang::Sema::RequireLiteralType;
void  (::clang::Sema::*method_pointer_5220603aadb454d1a2316df88e16b3de)()= &::clang::Sema::DiagnoseUseOfUnimplementedSelectors;
void  (::clang::Sema::*method_pointer_2f2283e263b653be8f688bd3aef4f2f4)(unsigned int , unsigned int , class ::clang::SourceLocation , class ::clang::SourceLocation , class ::clang::SourceLocation , class ::clang::SourceLocation , class ::clang::SourceLocation , class ::clang::SourceLocation )= &::clang::Sema::diagnoseIgnoredQualifiers;
void  (::clang::Sema::*method_pointer_2ff3226eb2795771b92c991f971a262f)(class ::clang::TagDecl *, class ::clang::TypedefNameDecl *)= &::clang::Sema::setTagNameForLinkagePurposes;
void  (::clang::Sema::*method_pointer_4c6080be1dfc5bbbaa3051294a12ad26)(class ::clang::VarDecl *)= &::clang::Sema::CheckVariableDeclarationType;
void  (::clang::Sema::*method_pointer_5849a47130b257d2a730a3dc7e93fefa)(class ::clang::VarDecl *)= &::clang::Sema::CheckCompleteVariableDeclaration;
void  (::clang::Sema::*method_pointer_36ae31f45a345fd8b4bd2571b58516b4)(class ::clang::DecompositionDecl *)= &::clang::Sema::CheckCompleteDecompositionDeclaration;
void  (::clang::Sema::*method_pointer_1c65ad4a5aaf5263a02dfcdcbc5b4a35)(class ::clang::FunctionDecl const *)= &::clang::Sema::MaybeSuggestAddingStaticToDecl;
bool  (::clang::Sema::*method_pointer_5aea844dfaac59bb90876ac37804cb53)(class ::clang::CXXRecordDecl *, class ::clang::CXXMethodDecl *)= &::clang::Sema::AddOverriddenMethods;
bool  (::clang::Sema::*method_pointer_c7250fc9410650f4964ea1e1e616a7f4)(class ::clang::FunctionDecl const *)= &::clang::Sema::CheckConstexprFunctionDecl;
void  (::clang::Sema::*method_pointer_c53b7d1aeda5597abf3186de89970bd4)(class ::clang::CXXMethodDecl *)= &::clang::Sema::DiagnoseHiddenVirtualMethods;
bool  (::clang::Sema::*method_pointer_f9f19d5fc8f651148c8c369813d009eb)(class ::clang::Decl *, class ::clang::Decl *)= &::clang::Sema::shouldLinkDependentDeclWithPrevious;
void  (::clang::Sema::*method_pointer_7fe127f9ffc450d590f21beb90cc2dc3)(class ::clang::FunctionDecl *)= &::clang::Sema::CheckMSVCRTEntryPoint;
class ::clang::ParmVarDecl * (::clang::Sema::*method_pointer_66d2bbf9b4a35d18ae05891c0a3206b1)(class ::clang::DeclContext *, class ::clang::SourceLocation , class ::clang::QualType )= &::clang::Sema::BuildParmVarDeclForTypedef;
void  (::clang::Sema::*method_pointer_35e3d2728c745494bfbcf0e020ee296f)(class ::clang::Decl *, class ::clang::SourceLocation , class ::clang::SourceLocation )= &::clang::Sema::ActOnParamUnparsedDefaultArgument;
void  (::clang::Sema::*method_pointer_b3f300e788a85c2a82632fb85f5bac68)(class ::clang::Decl *, class ::clang::SourceLocation )= &::clang::Sema::ActOnParamDefaultArgumentError;
void  (::clang::Sema::*method_pointer_0a2f45b80c475009a7145cabcbdf9309)(class ::clang::Decl *)= &::clang::Sema::ActOnUninitializedDecl;
void  (::clang::Sema::*method_pointer_fbfd166d3a3258108ba460c49cce28f9)(class ::clang::Decl *)= &::clang::Sema::ActOnInitializerError;
bool  (::clang::Sema::*method_pointer_2383d82a6d295a2ea2158f9b28645b00)(class ::clang::QualType )= &::clang::Sema::canInitializeWithParenthesizedList;
void  (::clang::Sema::*method_pointer_3548064a02d15984b691858d20ea07f3)(class ::clang::Decl *, class ::clang::SourceLocation )= &::clang::Sema::ActOnPureSpecifier;
void  (::clang::Sema::*method_pointer_873c844cd1ce5452ab9a04c8e0e5b1c5)(class ::clang::Decl *)= &::clang::Sema::ActOnCXXForRangeDecl;
void  (::clang::Sema::*method_pointer_a2cb242eec605154a35014703e38b605)(class ::clang::Decl *, class ::clang::SourceLocation )= &::clang::Sema::SetDeclDeleted;
void  (::clang::Sema::*method_pointer_65eb84d0f96a512282eecc223b78419d)(class ::clang::Decl *, class ::clang::SourceLocation )= &::clang::Sema::SetDeclDefaulted;
void  (::clang::Sema::*method_pointer_fc28147e3a3a57988189279ba430ea14)(class ::clang::Decl *)= &::clang::Sema::FinalizeDeclaration;
void  (::clang::Sema::*method_pointer_09b387ea1e2c568d99248c3940375a7c)(class ::clang::Decl *)= &::clang::Sema::ActOnDocumentableDecl;
bool  (::clang::Sema::*method_pointer_7335059c99575ce1889ab28ea16667b5)(class ::clang::Decl *)= &::clang::Sema::isObjCMethodDecl;
bool  (::clang::Sema::*method_pointer_47eb43e1fc495dba857cd0a22fba5b8f)(class ::clang::Decl *)= &::clang::Sema::canSkipFunctionBody;
class ::clang::Decl * (::clang::Sema::*method_pointer_8887441a3cc85f5e9c58c7fc28aeffed)(class ::clang::Decl *)= &::clang::Sema::ActOnSkippedFunctionBody;
void  (::clang::Sema::*method_pointer_6dd769d9ff6951748e824112311e8285)(class ::clang::FunctionDecl *)= &::clang::Sema::ActOnFinishInlineFunctionDef;
void  (::clang::Sema::*method_pointer_4c597bb479155d6fb71679d1a9da8e61)(class ::clang::SourceLocation , class ::clang::NamedDecl *)= &::clang::Sema::checkSpecializationVisibility;
void  (::clang::Sema::*method_pointer_fe7be370e2e751b089b2000225d0a88d)(class ::clang::SourceLocation , class ::clang::NamedDecl *)= &::clang::Sema::checkPartialSpecializationVisibility;
bool  (::clang::Sema::*method_pointer_0bd5663a283a538a82bedd1b0923bff8)(class ::clang::FieldDecl *)= &::clang::Sema::CheckNontrivialField;
class ::clang::Decl * (::clang::Sema::*method_pointer_0c954215410b53a3970e0fab6e3a0178)(class ::clang::Decl *)= &::clang::Sema::ActOnObjCContainerStartDefinition;
void  (::clang::Sema::*method_pointer_66497223e04b5953aaf9986bc69010ff)()= &::clang::Sema::ActOnObjCContainerFinishDefinition;
void  (::clang::Sema::*method_pointer_2eeb0958a286549a8fb96b84729b8612)(class ::clang::DeclContext *)= &::clang::Sema::ActOnObjCTemporaryExitContainerContext;
void  (::clang::Sema::*method_pointer_93568c52db1c5776a2c6d3b4f460a0ab)(class ::clang::DeclContext *)= &::clang::Sema::ActOnObjCReenterContainerContext;
bool  (::clang::Sema::*method_pointer_470a3481441155478cb62723a2d0921f)(class ::clang::SourceLocation , bool , class ::clang::QualType , bool , class ::clang::EnumDecl const *)= &::clang::Sema::CheckEnumRedeclaration;
class ::clang::DeclContext * (::clang::Sema::*method_pointer_e6c82589630b5a95acb2fd7f1b01de7f)(class ::clang::DeclContext *)= &::clang::Sema::getContainingDC;
void  (::clang::Sema::*method_pointer_d2068b9171af53d98fd1fa600c9b81cb)()= &::clang::Sema::PopDeclContext;
void  (::clang::Sema::*method_pointer_9de9c0f675f053ab901d6057cfe6f048)()= &::clang::Sema::ActOnExitFunctionContext;
class ::clang::DeclContext * (::clang::Sema::*method_pointer_c9d81126de065e488a00587c30c3ef8e)()= &::clang::Sema::getFunctionLevelDeclContext;
class ::clang::FunctionDecl * (::clang::Sema::*method_pointer_bf29205dc02c5daba99ab664324bf88e)()= &::clang::Sema::getCurFunctionDecl;
class ::clang::ObjCMethodDecl * (::clang::Sema::*method_pointer_3b381e76ef73514b999a3e65417428e4)()= &::clang::Sema::getCurMethodDecl;
class ::clang::NamedDecl * (::clang::Sema::*method_pointer_03cf0253966857239b4a4ef0203585b6)()= &::clang::Sema::getCurFunctionOrMethodDecl;
bool  (::clang::Sema::*method_pointer_e4059a6a6ed15e4090b90cd4399d6969)(class ::clang::TypeDecl *, class ::clang::TypedefNameDecl *)= &::clang::Sema::isIncompatibleTypedef;
void  (::clang::Sema::*method_pointer_6896cb578b775065b8631807d475d200)(class ::clang::ObjCMethodDecl *, class ::clang::ObjCMethodDecl *)= &::clang::Sema::mergeObjCMethodDecls;
void  (::clang::Sema::*method_pointer_a9f6ef0fa8e151d89d3f6ed7319015dd)(class ::clang::VarDecl *, class ::clang::VarDecl *, bool )= &::clang::Sema::MergeVarDeclTypes;
void  (::clang::Sema::*method_pointer_e3bb38b301f8551ca7616216996033be)(class ::clang::VarDecl *, class ::clang::VarDecl *)= &::clang::Sema::MergeVarDeclExceptionSpecs;
bool  (::clang::Sema::*method_pointer_209db7b6ef24539c80adb4d4f62dbfda)(class ::clang::VarDecl *, class ::clang::VarDecl *)= &::clang::Sema::checkVarDeclRedefinition;
bool  (::clang::Sema::*method_pointer_468ca8c4c2805675bc59bfe8eca03dde)(class ::clang::FunctionDecl *, class ::clang::FunctionDecl *, bool , bool )= &::clang::Sema::IsOverload;
bool  (::clang::Sema::*method_pointer_374dc92bb62a59debe477c10b2cf59bc)(class ::clang::FunctionDecl *)= &::clang::Sema::isFunctionConsideredUnavailable;
bool  (::clang::Sema::*method_pointer_0713c5b0534758c7ac5b485f0cba2cd2)(class ::clang::QualType , class ::clang::QualType )= &::clang::Sema::IsFloatingPointPromotion;
bool  (::clang::Sema::*method_pointer_585a7eacc0ad50618e65e8929f6c95c2)(class ::clang::QualType , class ::clang::QualType )= &::clang::Sema::IsComplexPromotion;
bool  (::clang::Sema::*method_pointer_5e72f5fb85915a5396877ba510890fa0)(class ::clang::QualType , class ::clang::QualType , class ::clang::QualType &, bool &)= &::clang::Sema::isObjCPointerConversion;
bool  (::clang::Sema::*method_pointer_7e42f9632c0252859ff32cda05828308)(class ::clang::QualType , class ::clang::QualType , class ::clang::QualType &)= &::clang::Sema::isObjCWritebackConversion;
bool  (::clang::Sema::*method_pointer_8821f9ff786a5b06b72b728e5ef50f51)(class ::clang::QualType , class ::clang::QualType , class ::clang::QualType &)= &::clang::Sema::IsBlockPointerConversion;
bool  (::clang::Sema::*method_pointer_ebd94978a9d557abb0f9fbd95cb4270c)(class ::clang::QualType , class ::clang::QualType , bool , bool &)= &::clang::Sema::IsQualificationConversion;
bool  (::clang::Sema::*method_pointer_d99fd0a4821d51c2be107d3369ece1a5)(class ::clang::QualType , class ::clang::QualType , class ::clang::QualType &)= &::clang::Sema::IsFunctionConversion;
void  (::clang::Sema::*method_pointer_c6778dfcdcb95fa7a386e887e7aade03)(class ::clang::NamedDecl *, class ::clang::FunctionDecl *, class ::clang::QualType , bool )= &::clang::Sema::NoteOverloadCandidate;
bool  (::clang::Sema::*method_pointer_b7f6882df4f45d6083e67a8e0e4dcdd1)(class ::clang::FunctionDecl const *, class ::clang::SourceLocation )= &::clang::Sema::diagnoseArgIndependentDiagnoseIfAttrs;
bool  (::clang::Sema::*method_pointer_f9b18aaddeb653cdbe562a22edaf4017)(class ::clang::FunctionDecl const *, bool , class ::clang::SourceLocation )= &::clang::Sema::checkAddressOfFunctionIsAvailable;
class ::clang::QualType  (::clang::Sema::*method_pointer_91f961e58bdf5887b47af591dc5a1743)(class ::clang::QualType )= &::clang::Sema::ExtractUnqualifiedFunctionType;
void  (::clang::Sema::*method_pointer_0851d0785370525f9048c3b137c15515)(class ::clang::FunctionDecl *)= &::clang::Sema::CheckCXXDefaultArguments;
class ::clang::CXXConstructorDecl * (::clang::Sema::*method_pointer_5fb70a47c89a577881a5db1ebf1e59e2)(class ::clang::CXXRecordDecl *)= &::clang::Sema::LookupDefaultConstructor;
class ::clang::CXXConstructorDecl * (::clang::Sema::*method_pointer_d40497f3e51752aa8b933a5260683e2a)(class ::clang::CXXRecordDecl *, unsigned int )= &::clang::Sema::LookupCopyingConstructor;
class ::clang::CXXMethodDecl * (::clang::Sema::*method_pointer_78ffc6dce7b25dd499f397f218031e30)(class ::clang::CXXRecordDecl *, unsigned int , bool , unsigned int )= &::clang::Sema::LookupCopyingAssignment;
class ::clang::CXXConstructorDecl * (::clang::Sema::*method_pointer_7d5fbae89bfc5ce68986051b5c9f09b3)(class ::clang::CXXRecordDecl *, unsigned int )= &::clang::Sema::LookupMovingConstructor;
class ::clang::CXXMethodDecl * (::clang::Sema::*method_pointer_4e44c12217855341a6cdd9b0fe71d142)(class ::clang::CXXRecordDecl *, unsigned int , bool , unsigned int )= &::clang::Sema::LookupMovingAssignment;
class ::clang::CXXDestructorDecl * (::clang::Sema::*method_pointer_3e698b378c945204aa86f4714a6a7c45)(class ::clang::CXXRecordDecl *)= &::clang::Sema::LookupDestructor;
bool  (::clang::Sema::*method_pointer_cb01ff8ff9f7581f91455eb5d82d0eff)(class ::llvm::StringRef )= &::clang::Sema::isKnownName;
void  (::clang::Sema::*method_pointer_39dc71c12c7055ca94afafafd02336a4)(class ::clang::FunctionDecl *)= &::clang::Sema::AddKnownFunctionAttributes;
bool  (::clang::Sema::*method_pointer_5b4efaf5d0d35a4cb3c94e9708b6af98)(class ::clang::QualType , bool )= &::clang::Sema::isValidPointerAttrType;
bool  (::clang::Sema::*method_pointer_d2ba17043d3d526f8b945e628f094619)(class ::clang::SourceLocation , class ::llvm::StringRef )= &::clang::Sema::checkSectionName;
void  (::clang::Sema::*method_pointer_afd291ae58465a79a23426bf5473bdcb)(class ::clang::SourceLocation , class ::llvm::StringRef )= &::clang::Sema::checkTargetAttr;
void  (::clang::Sema::*method_pointer_0db3b479cd945333b169d1935b7d7150)(class ::clang::Decl *)= &::clang::Sema::CheckAlignasUnderalignment;
void  (::clang::Sema::*method_pointer_ee93f8aab8db5be6bbe0f1814727b8e6)(class ::clang::QualType &, bool , bool , class ::clang::SourceLocation )= &::clang::Sema::adjustMemberFunctionCC;
bool  (::clang::Sema::*method_pointer_c650fc55996a5d2dae1a0b8db7355807)(class ::clang::QualType &)= &::clang::Sema::hasExplicitCallingConv;
class ::clang::AttributedType const * (::clang::Sema::*method_pointer_31e4dcf929105f6e833091118b2a2b17)(class ::clang::QualType )const= &::clang::Sema::getCallingConvAttributedType;
void  (::clang::Sema::*method_pointer_f62073ab96bd5dacbd218f6047616f01)(class ::clang::ObjCMethodDecl *, class ::clang::ObjCMethodDecl *, bool )= &::clang::Sema::WarnConflictingTypedMethods;
void  (::clang::Sema::*method_pointer_a0dcf68b09cc5d78a2242041c4fdc8b3)(class ::clang::ObjCMethodDecl *, class ::clang::ObjCMethodDecl *, bool )= &::clang::Sema::CheckConflictingOverridingMethod;
void  (::clang::Sema::*method_pointer_ecac7ffad47a5b05bc642ceb52443fd6)(class ::clang::ObjCMethodDecl *, class ::clang::ObjCMethodDecl *, bool )= &::clang::Sema::WarnExactTypedMethods;
void  (::clang::Sema::*method_pointer_f18a4cd89b3b5d4da43e85ad693d6bc7)(class ::clang::ObjCImplDecl const *)= &::clang::Sema::diagnoseNullResettableSynthesizedSetters;
bool  (::clang::Sema::*method_pointer_081057693242578f92a376ccfc136e53)(class ::clang::ObjCInterfaceDecl *, class ::clang::ObjCMethodDecl *, class ::clang::ObjCIvarDecl *)= &::clang::Sema::IvarBacksCurrentMethodAccessor;
void  (::clang::Sema::*method_pointer_1a4b557df35759ae9a8cb1af076a9095)(class ::clang::ObjCImplDecl *, class ::clang::ObjCInterfaceDecl *)= &::clang::Sema::AtomicPropertySetterGetterRules;
void  (::clang::Sema::*method_pointer_c23e4d1f837f53099e8a4f9a48b9ed1b)(class ::clang::ObjCImplementationDecl const *)= &::clang::Sema::DiagnoseOwningPropertyGetterSynthesis;
void  (::clang::Sema::*method_pointer_5bdde8ed23e85bf38e951cf15f1d742b)(class ::clang::ObjCImplementationDecl const *, class ::clang::ObjCInterfaceDecl const *)= &::clang::Sema::DiagnoseMissingDesignatedInitOverrides;
void  (::clang::Sema::*method_pointer_d7fe663efa145b81bbfd97a494ea60e6)(class ::clang::ObjCInterfaceDecl *, class ::clang::ObjCInterfaceDecl *)= &::clang::Sema::DiagnoseDuplicateIvars;
void  (::clang::Sema::*method_pointer_8092a099955459b19f5aa0920468fe04)(class ::clang::ObjCCategoryImplDecl *)= &::clang::Sema::CheckCategoryVsClassMethodMatches;
void  (::clang::Sema::*method_pointer_05197948eb945768b3488ddc83dddb00)(class ::clang::ObjCMethodDecl *, bool )= &::clang::Sema::AddInstanceMethodToGlobalPool;
void  (::clang::Sema::*method_pointer_458e8bda279d5b15a9c925010860202a)(class ::clang::ObjCMethodDecl *, bool )= &::clang::Sema::AddFactoryMethodToGlobalPool;
void  (::clang::Sema::*method_pointer_7a7dd7e0a5005b6a8f6503dd87859b71)(class ::clang::Decl *)= &::clang::Sema::AddAnyMethodToGlobalPool;
void  (::clang::Sema::*method_pointer_89e10a22b2e85a8294059e5e75876046)()= &::clang::Sema::ActOnStartOfCompoundStmt;
void  (::clang::Sema::*method_pointer_7df5a55591925233b6e9dc803b609522)()= &::clang::Sema::ActOnFinishOfCompoundStmt;
void  (::clang::Sema::*method_pointer_b421eae7cee1516bb99fccc7a3ef9f39)()= &::clang::Sema::ActOnCapturedRegionError;
bool  (::clang::Sema::*method_pointer_179de9075ca4578bb873da4e5d991649)(class ::clang::QualType , class ::clang::VarDecl const *, bool )= &::clang::Sema::isCopyElisionCandidate;
bool  (::clang::Sema::*method_pointer_7b8ae8b3e84d5422bb7e9626781f3c93)(class ::llvm::StringRef , class ::llvm::StringRef , unsigned int &, class ::clang::SourceLocation )= &::clang::Sema::LookupInlineAsmField;
class ::clang::LabelDecl * (::clang::Sema::*method_pointer_af33d563a66859389a3991f978a313dc)(class ::llvm::StringRef , class ::clang::SourceLocation , bool )= &::clang::Sema::GetOrCreateMSAsmLabel;
void  (::clang::Sema::*method_pointer_e84ef64c18e65573bd6e04044876a1c0)()= &::clang::Sema::ActOnStartSEHFinallyBlock;
void  (::clang::Sema::*method_pointer_7db90a96cb6a5415b475bffbbd7593f5)()= &::clang::Sema::ActOnAbortSEHFinallyBlock;
bool  (::clang::Sema::*method_pointer_c19fa26a45b15fde85871fb1eac198a5)(class ::clang::DeclaratorDecl const *)const= &::clang::Sema::ShouldWarnIfUnusedFileScopedDecl;
void  (::clang::Sema::*method_pointer_3ea1ad462a19543b98c7f4ebc66b9ced)(class ::clang::DeclaratorDecl const *)= &::clang::Sema::MarkUnusedFileScopedDecl;
void  (::clang::Sema::*method_pointer_827e9a16cdcd55129cd8ad02909fc9f3)(class ::clang::RecordDecl const *)= &::clang::Sema::DiagnoseUnusedNestedTypedefs;
void  (::clang::Sema::*method_pointer_7bc098e18f66504ca45f09fc5cf71b22)(class ::clang::NamedDecl const *)= &::clang::Sema::DiagnoseUnusedDecl;
void  (::clang::Sema::*method_pointer_0cc449eb4d0259b8b5708bf4dffd4584)(class ::clang::QualType , class ::clang::QualType , class ::clang::SourceLocation )= &::clang::Sema::diagnoseNullableToNonnullConversion;
void  (::clang::Sema::*method_pointer_1798c32e377e59cdb3cc687a3b7a7888)(class ::clang::Decl *)= &::clang::Sema::DiagnoseUnguardedAvailabilityViolations;
bool  (::clang::Sema::*method_pointer_ed3ca1a4123958ce966505445424b005)(class ::clang::NamedDecl *, bool )= &::clang::Sema::CanUseDecl;
bool  (::clang::Sema::*method_pointer_fd3d698189825dfc9603d79472a75dec)(class ::clang::NamedDecl *, class ::clang::SourceLocation , class ::clang::ObjCInterfaceDecl const *, bool )= &::clang::Sema::DiagnoseUseOfDecl;
void  (::clang::Sema::*method_pointer_2f2e9747007e586f9be4f0eb48a99c55)(class ::clang::FunctionDecl *)= &::clang::Sema::NoteDeletedFunction;
void  (::clang::Sema::*method_pointer_bb2004ece3a35ab1a23e7445655b28c7)(class ::clang::CXXConstructorDecl *)= &::clang::Sema::NoteDeletedInheritingConstructor;
bool  (::clang::Sema::*method_pointer_bfc9e0e316d45d3cb7a25104dde49633)(class ::clang::ObjCPropertyDecl *, class ::clang::ObjCMethodDecl *, class ::clang::SourceLocation )= &::clang::Sema::DiagnosePropertyAccessorMismatch;
void  (::clang::Sema::*method_pointer_a8bd46cf14e952f0aef3ef5d75e3f545)()= &::clang::Sema::PopExpressionEvaluationContext;
void  (::clang::Sema::*method_pointer_7bef9a8938e753bd85bd730d3ce5cd5d)()= &::clang::Sema::DiscardCleanupsInEvaluationContext;
void  (::clang::Sema::*method_pointer_d4f2f45c9beb59d1b1dc39c44143cc9e)(class ::clang::SourceLocation , class ::clang::Decl *, bool )= &::clang::Sema::MarkAnyDeclReferenced;
void  (::clang::Sema::*method_pointer_2573d0f39d6e545e880c1003382b8f81)(class ::clang::SourceLocation , class ::clang::FunctionDecl *, bool )= &::clang::Sema::MarkFunctionReferenced;
void  (::clang::Sema::*method_pointer_0738f60454cc5d6a9f43d5073a6113d3)(class ::clang::SourceLocation , class ::clang::VarDecl *)= &::clang::Sema::MarkVariableReferenced;
void  (::clang::Sema::*method_pointer_cc2eb244918d5c8fbb199ce60bd3f18c)()= &::clang::Sema::CleanupVarDeclMarking;
bool  (::clang::Sema::*method_pointer_11977ad3369b5302ba8759f6550a1dde)(class ::clang::VarDecl *, class ::clang::SourceLocation )= &::clang::Sema::NeedToCaptureVariable;
class ::clang::QualType  (::clang::Sema::*method_pointer_6c498f31ef505bcda28d92fb6231d6df)(class ::clang::VarDecl *, class ::clang::SourceLocation )= &::clang::Sema::getCapturedDeclRefType;
void  (::clang::Sema::*method_pointer_bfffcdd0a3af5404b7ae6c59676661a4)(class ::clang::SourceLocation , class ::clang::QualType )= &::clang::Sema::MarkDeclarationsReferencedInType;
void  (::clang::Sema::*method_pointer_fbdf6f5b697e523e9f4b51cdef298988)(class ::clang::Decl *)= &::clang::Sema::ActOnDefaultCtorInitializers;
void  (::clang::Sema::*method_pointer_edcd07fcee8a5d6d98a1962055cdf994)()= &::clang::Sema::ActOnStartStmtExpr;
void  (::clang::Sema::*method_pointer_41f511ac5bb551309d45a2341d73ea0e)()= &::clang::Sema::ActOnStmtExprError;
void  (::clang::Sema::*method_pointer_c01d8385bab75bbca384766b90fc17c6)(class ::clang::Decl *, class ::clang::SourceLocation )= &::clang::Sema::ActOnFinishNamespaceDef;
class ::clang::NamespaceDecl * (::clang::Sema::*method_pointer_a272d0598a2751aa9c5a4a08ae5dda77)()const= &::clang::Sema::getStdNamespace;
class ::clang::NamespaceDecl * (::clang::Sema::*method_pointer_c840613714f95827977de4f27be2974a)()= &::clang::Sema::getOrCreateStdNamespace;
class ::clang::NamespaceDecl * (::clang::Sema::*method_pointer_f021f0c91d7d5ecbaac3fdcbeb8d0f3c)()= &::clang::Sema::lookupStdExperimentalNamespace;
class ::clang::CXXRecordDecl * (::clang::Sema::*method_pointer_87929e6b5af652f3b4414cae8181fb01)()const= &::clang::Sema::getStdBadAlloc;
class ::clang::EnumDecl * (::clang::Sema::*method_pointer_f72124cb764b52888e907fbf917cfcdf)()const= &::clang::Sema::getStdAlignValT;
bool  (::clang::Sema::*method_pointer_324fcdddc2775bcf9a860dc627972784)(class ::clang::QualType , class ::clang::QualType *)= &::clang::Sema::isStdInitializerList;
class ::clang::QualType  (::clang::Sema::*method_pointer_fb870b11aba353178f406234bea1f97d)(class ::clang::QualType , class ::clang::SourceLocation )= &::clang::Sema::BuildStdInitializerList;
bool  (::clang::Sema::*method_pointer_e136d7756d0a5687ad241869680b77f6)(class ::clang::CXXConstructorDecl const *)= &::clang::Sema::isInitListConstructor;
bool  (::clang::Sema::*method_pointer_5365c1a79d565754b1c007ed37fac744)(class ::clang::UsingDecl *)= &::clang::Sema::CheckInheritingConstructorUsingDecl;
class ::clang::CXXConstructorDecl * (::clang::Sema::*method_pointer_66d8dc38adbf5d3bb42887fc8f427f24)(class ::clang::SourceLocation , class ::clang::CXXConstructorDecl *, class ::clang::ConstructorUsingShadowDecl *)= &::clang::Sema::findInheritingConstructor;
bool  (::clang::Sema::*method_pointer_7afbb4517f0e598fa449d279297d48db)(class ::clang::SourceLocation , class ::clang::FunctionDecl *, class ::clang::ParmVarDecl *)= &::clang::Sema::CheckCXXDefaultArgExpr;
void  (::clang::Sema::*method_pointer_807633541706525aa4f18cd85f1b87b9)(class ::clang::VarDecl *, class ::clang::RecordType const *)= &::clang::Sema::FinalizeVarWithDestructor;
void  (::clang::Sema::*method_pointer_58b11388b42055ef965fdbcf04bb5a74)(class ::clang::SourceLocation , class ::clang::CXXMethodDecl *)= &::clang::Sema::EvaluateImplicitExceptionSpec;
class ::clang::CXXConstructorDecl * (::clang::Sema::*method_pointer_b4e5976b6b0b5c0fa8ac92a9933a3e6d)(class ::clang::CXXRecordDecl *)= &::clang::Sema::DeclareImplicitDefaultConstructor;
void  (::clang::Sema::*method_pointer_e8ae43b4e9e85c3b9acf0739521e6bf3)(class ::clang::SourceLocation , class ::clang::CXXConstructorDecl *)= &::clang::Sema::DefineImplicitDefaultConstructor;
class ::clang::CXXDestructorDecl * (::clang::Sema::*method_pointer_022e1d99b9c151ffb6dcd40662cc1fa6)(class ::clang::CXXRecordDecl *)= &::clang::Sema::DeclareImplicitDestructor;
void  (::clang::Sema::*method_pointer_278377c3710252df84d834f90feb4ac6)(class ::clang::SourceLocation , class ::clang::CXXDestructorDecl *)= &::clang::Sema::DefineImplicitDestructor;
void  (::clang::Sema::*method_pointer_c076e5d9f48f5c6599667d8f609a59b6)(class ::clang::CXXRecordDecl *, class ::clang::CXXDestructorDecl *)= &::clang::Sema::AdjustDestructorExceptionSpec;
void  (::clang::Sema::*method_pointer_160203b095d953949a073c455d97b272)(class ::clang::SourceLocation , class ::clang::CXXConstructorDecl *)= &::clang::Sema::DefineInheritingConstructor;
class ::clang::CXXConstructorDecl * (::clang::Sema::*method_pointer_160985acb11b530e942b9a5c09ddeef3)(class ::clang::CXXRecordDecl *)= &::clang::Sema::DeclareImplicitCopyConstructor;
void  (::clang::Sema::*method_pointer_0414b15bd6535fafaaccfd6e9a79b273)(class ::clang::SourceLocation , class ::clang::CXXConstructorDecl *)= &::clang::Sema::DefineImplicitCopyConstructor;
class ::clang::CXXConstructorDecl * (::clang::Sema::*method_pointer_1585888ed49a53e4bb37bd0fb89346d4)(class ::clang::CXXRecordDecl *)= &::clang::Sema::DeclareImplicitMoveConstructor;
void  (::clang::Sema::*method_pointer_25ba5e2a90f55084a177f2c96bb7c114)(class ::clang::SourceLocation , class ::clang::CXXConstructorDecl *)= &::clang::Sema::DefineImplicitMoveConstructor;
class ::clang::CXXMethodDecl * (::clang::Sema::*method_pointer_3880da898f0752a986e50ca7d09a83f7)(class ::clang::CXXRecordDecl *)= &::clang::Sema::DeclareImplicitCopyAssignment;
void  (::clang::Sema::*method_pointer_396ec4d31e16594881ac5e7f164fb4fc)(class ::clang::SourceLocation , class ::clang::CXXMethodDecl *)= &::clang::Sema::DefineImplicitCopyAssignment;
class ::clang::CXXMethodDecl * (::clang::Sema::*method_pointer_a075c5c8d5c65d53a9f51893df14b78a)(class ::clang::CXXRecordDecl *)= &::clang::Sema::DeclareImplicitMoveAssignment;
void  (::clang::Sema::*method_pointer_36f755c2a2ba5dfcbdf77259f1903fbc)(class ::clang::SourceLocation , class ::clang::CXXMethodDecl *)= &::clang::Sema::DefineImplicitMoveAssignment;
void  (::clang::Sema::*method_pointer_aff3696afb4858cebdba58d8fc0caecb)(class ::clang::CXXRecordDecl *)= &::clang::Sema::ForceDeclarationOfImplicitMembers;
bool  (::clang::Sema::*method_pointer_fdace404dfc659b3bd0d80e4aea8b3f0)(class ::clang::FunctionDecl *)= &::clang::Sema::isImplicitlyDeleted;
bool  (::clang::Sema::*method_pointer_a882c07afa5f53f590f24ced85fe98ce)(class ::clang::CXXMethodDecl *)= &::clang::Sema::checkThisInStaticMemberFunctionType;
bool  (::clang::Sema::*method_pointer_1dafe7445876592c970f60e143bca02c)(class ::clang::CXXMethodDecl *)= &::clang::Sema::checkThisInStaticMemberFunctionExceptionSpec;
bool  (::clang::Sema::*method_pointer_5d2417847471595e855aa543c7288d12)(class ::clang::CXXMethodDecl *)= &::clang::Sema::checkThisInStaticMemberFunctionAttributes;
class ::clang::QualType  (::clang::Sema::*method_pointer_be458959dc3f54afa1633a860fa403fd)()= &::clang::Sema::getCurrentThisType;
bool  (::clang::Sema::*method_pointer_ee9c231b1a255ba0afecab4b94e1ae76)(class ::clang::QualType )= &::clang::Sema::isThisOutsideMemberFunctionBody;
void  (::clang::Sema::*method_pointer_12e2c2f531c055c690fd050923834c64)()= &::clang::Sema::DeclareGlobalNewDelete;
class ::clang::FunctionDecl * (::clang::Sema::*method_pointer_ba18771b271c531eaf1d16ef2a0112b3)(class ::clang::SourceLocation , class ::clang::CXXRecordDecl *)= &::clang::Sema::FindDeallocationFunctionForDestructor;
void  (::clang::Sema::*method_pointer_472c17f6a13b58ef96cf4363c3d65736)(class ::clang::CXXDestructorDecl *, class ::clang::SourceLocation , bool , bool , bool , class ::clang::SourceLocation )= &::clang::Sema::CheckVirtualDtorCall;
class ::clang::DeclContext * (::clang::Sema::*method_pointer_d7715019eaa1546a9d68b4633aeb9dcc)(class ::clang::QualType )= &::clang::Sema::computeDeclContext;
void  (::clang::Sema::*method_pointer_96e365c308cf5b3d86ab0bbae9a20f8b)(class ::clang::SourceLocation , class ::clang::CXXConversionDecl *)= &::clang::Sema::DefineImplicitLambdaToFunctionPointerConversion;
void  (::clang::Sema::*method_pointer_f90c1b8266e25ceeae653ce49bba5da6)(class ::clang::SourceLocation , class ::clang::CXXConversionDecl *)= &::clang::Sema::DefineImplicitLambdaToBlockPointerConversion;
void  (::clang::Sema::*method_pointer_87808e830855502f85416b198c3b1abf)()= &::clang::Sema::ActOnStartCXXInClassMemberInitializer;
void  (::clang::Sema::*method_pointer_c9d671e4925759a3b63650ac38fa824a)(class ::clang::ObjCImplementationDecl *)= &::clang::Sema::SetIvarInitializers;
void  (::clang::Sema::*method_pointer_7ee249119d5b583ca8fd7f042f946fe0)(class ::clang::SourceLocation , class ::clang::CXXRecordDecl *)= &::clang::Sema::MarkBaseAndMemberDestructorsReferenced;
void  (::clang::Sema::*method_pointer_abeafcce15ce50bcb0cc99db972d4f72)()= &::clang::Sema::LoadExternalVTableUses;
void  (::clang::Sema::*method_pointer_c5e3199c6900599084e9d8ee7561e6ce)(class ::clang::SourceLocation , class ::clang::CXXRecordDecl *, bool )= &::clang::Sema::MarkVTableUsed;
void  (::clang::Sema::*method_pointer_f59df23c55875a6e8de615320db42c06)(class ::clang::SourceLocation , class ::clang::CXXRecordDecl const *)= &::clang::Sema::MarkVirtualMemberExceptionSpecsNeeded;
void  (::clang::Sema::*method_pointer_913cc2b2968a53c79142fd6c73ef8586)(class ::clang::SourceLocation , class ::clang::CXXRecordDecl const *)= &::clang::Sema::MarkVirtualMembersReferenced;
bool  (::clang::Sema::*method_pointer_c753168407e754d49d7e18efa6b5cab3)()= &::clang::Sema::DefineUsedVTables;
void  (::clang::Sema::*method_pointer_66ece0ce7e6059ad90c84dee15103444)(class ::clang::CXXRecordDecl *)= &::clang::Sema::AddImplicitlyDeclaredMembersToClass;
void  (::clang::Sema::*method_pointer_dd660ae06f3b504cb88284469f97830e)(class ::clang::CXXRecordDecl *)= &::clang::Sema::checkClassLevelDLLAttribute;
void  (::clang::Sema::*method_pointer_1f0740e5335f512e8af7465c24856286)()= &::clang::Sema::referenceDLLExportedClassMethods;
void  (::clang::Sema::*method_pointer_22df5321ba21536db77e72315c312a66)(class ::clang::CXXRecordDecl *)= &::clang::Sema::CheckCompletedCXXClass;
void  (::clang::Sema::*method_pointer_8050a512b21d55078651d0b9c61cddb9)()= &::clang::Sema::ActOnFinishCXXMemberDecls;
void  (::clang::Sema::*method_pointer_0e1fa58b2abd57b79be4e715736274b3)(class ::clang::Decl *)= &::clang::Sema::ActOnFinishCXXNonNestedClass;
void  (::clang::Sema::*method_pointer_e3e0e65aefc4547fa2e638ede30fa0bd)(class ::clang::Decl *)= &::clang::Sema::ActOnFinishDelayedMemberInitializers;
void  (::clang::Sema::*method_pointer_56a61415f7f855eab5231afeeccd8942)(class ::clang::FunctionDecl *)= &::clang::Sema::UnmarkAsLateParsedTemplate;
bool  (::clang::Sema::*method_pointer_375db722eea15edcb71d5f4e76a04117)()= &::clang::Sema::IsInsideALocalClassWithinATemplateFunction;
void  (::clang::Sema::*method_pointer_84d77df3e42451c38a3c03d24c8fa982)(class ::clang::CXXConstructorDecl *)= &::clang::Sema::CheckConstructor;
bool  (::clang::Sema::*method_pointer_6cf576c9638a590c9711464a8d1fe968)(class ::clang::CXXDestructorDecl *)= &::clang::Sema::CheckDestructor;
class ::clang::Decl * (::clang::Sema::*method_pointer_0c922e2275195467951435a06273546b)(class ::clang::CXXConversionDecl *)= &::clang::Sema::ActOnConversionDeclarator;
void  (::clang::Sema::*method_pointer_a3ba8cb36d395ba2a9cea6af5e35b4c2)(class ::clang::CXXMethodDecl *)= &::clang::Sema::CheckExplicitlyDefaultedSpecialMember;
void  (::clang::Sema::*method_pointer_ce82ed9d7bed50cfbee39cce85a10014)(class ::clang::CXXMethodDecl *, class ::clang::FunctionProtoType const *)= &::clang::Sema::CheckExplicitlyDefaultedMemberExceptionSpec;
void  (::clang::Sema::*method_pointer_8552a86b05f25cb7b4a0ba76e6464e40)()= &::clang::Sema::CheckDelayedMemberExceptionSpecs;
bool  (::clang::Sema::*method_pointer_0f605ca8940d5b9280a1567c3f69b2e7)(class ::clang::SourceLocation , class ::clang::QualType , class ::clang::QualType )= &::clang::Sema::IsDerivedFrom;
bool  (::clang::Sema::*method_pointer_e60e38d1548f59b3bb6a4f9c90a91ede)(class ::clang::CXXMethodDecl const *, class ::clang::CXXMethodDecl const *)= &::clang::Sema::CheckOverridingFunctionAttributes;
bool  (::clang::Sema::*method_pointer_9063f91ec8f5518088b6217a95c2ff61)(class ::clang::CXXMethodDecl const *, class ::clang::CXXMethodDecl const *)= &::clang::Sema::CheckOverridingFunctionReturnType;
bool  (::clang::Sema::*method_pointer_140a031cb3b15d2db506670acdf75081)(class ::clang::CXXMethodDecl const *, class ::clang::CXXMethodDecl const *)= &::clang::Sema::CheckOverridingFunctionExceptionSpec;
void  (::clang::Sema::*method_pointer_c1f98e268637518c97af8b0ab8c45b75)(class ::clang::NamedDecl *)= &::clang::Sema::CheckOverrideControl;
void  (::clang::Sema::*method_pointer_586c40a65a4457549ecce29a5559d6af)(class ::clang::NamedDecl *)= &::clang::Sema::DiagnoseAbsenceOfOverrideControl;
bool  (::clang::Sema::*method_pointer_8c84be55e1bb513fb6287b1ec74f57a0)(class ::clang::CXXMethodDecl const *, class ::clang::CXXMethodDecl const *)= &::clang::Sema::CheckIfOverriddenFunctionIsMarkedFinal;
bool  (::clang::Sema::*method_pointer_652a8f73ccf85e14bcdd8ea770d5ee38)(class ::clang::NamedDecl *, class ::clang::NamedDecl *, enum ::clang::AccessSpecifier )= &::clang::Sema::SetMemberAccessSpecifier;
bool  (::clang::Sema::*method_pointer_fd192dc29fa95742ac27cea3c2221299)(class ::clang::NamedDecl *, class ::clang::DeclContext *)= &::clang::Sema::IsSimplyAccessible;
bool  (::clang::Sema::*method_pointer_6c48e22b776f5fefb81d0559e13511be)(class ::clang::CXXMethodDecl *, enum ::clang::AccessSpecifier , class ::clang::QualType )= &::clang::Sema::isSpecialMemberAccessibleForDeletion;
bool  (::clang::Sema::*method_pointer_0d50262b94135874ac14931956c71856)(class ::clang::SourceLocation , class ::clang::QualType )= &::clang::Sema::isAbstractType;
void  (::clang::Sema::*method_pointer_cc3fc19ca18758b19a1e6d7077e904ce)(class ::clang::CXXRecordDecl const *)= &::clang::Sema::DiagnoseAbstractType;
bool  (::clang::Sema::*method_pointer_bee820d4efdb5459bd34ceed0a14750d)(class ::clang::FunctionDecl *)= &::clang::Sema::CheckOverloadedOperatorDeclaration;
bool  (::clang::Sema::*method_pointer_ec10fd1ecb795b1b8877580ea8b67415)(class ::clang::FunctionDecl *)= &::clang::Sema::CheckLiteralOperatorDeclaration;
void  (::clang::Sema::*method_pointer_152230b9b793543eb074f05f3c70b456)(class ::clang::SourceLocation , class ::clang::Decl *)= &::clang::Sema::DiagnoseTemplateParameterShadow;
class ::clang::QualType  (::clang::Sema::*method_pointer_6fc58efc4bb85838bcee343458c8dbd4)(class ::clang::QualType , class ::clang::SourceLocation )= &::clang::Sema::CheckNonTypeTemplateParameterType;
void  (::clang::Sema::*method_pointer_031a4088bf7e5e72a905d08a04885d0b)(class ::clang::ClassTemplatePartialSpecializationDecl *)= &::clang::Sema::CheckTemplatePartialSpecialization;
void  (::clang::Sema::*method_pointer_8b25f1b103235b1cac944dc0a783474a)(class ::clang::VarTemplatePartialSpecializationDecl *)= &::clang::Sema::CheckTemplatePartialSpecialization;
bool  (::clang::Sema::*method_pointer_d3b84e31461654eaaa7f391df99cf5ed)()= &::clang::Sema::isUnexpandedParameterPackPermitted;
class ::clang::QualType  (::clang::Sema::*method_pointer_c89151d9e84355659d1f4de30efebf0c)(class ::clang::QualType , class ::clang::QualType , bool )= &::clang::Sema::adjustCCAndNoReturn;
class ::clang::QualType  (::clang::Sema::*method_pointer_8fff314a318257c4804507a924fb8099)(class ::clang::QualType , class ::clang::QualType )= &::clang::Sema::SubstAutoType;
bool  (::clang::Sema::*method_pointer_0856d5aff63851aa89afbbbbb7421be0)(class ::clang::FunctionDecl *, class ::clang::SourceLocation , bool )= &::clang::Sema::DeduceReturnType;
class ::clang::ClassTemplatePartialSpecializationDecl * (::clang::Sema::*method_pointer_baad3be47ef959dca2144300fe490b2f)(class ::clang::ClassTemplatePartialSpecializationDecl *, class ::clang::ClassTemplatePartialSpecializationDecl *, class ::clang::SourceLocation )= &::clang::Sema::getMoreSpecializedPartialSpecialization;
class ::clang::VarTemplatePartialSpecializationDecl * (::clang::Sema::*method_pointer_e4634dcd21e95e1b87b0068cc97abfe0)(class ::clang::VarTemplatePartialSpecializationDecl *, class ::clang::VarTemplatePartialSpecializationDecl *, class ::clang::SourceLocation )= &::clang::Sema::getMoreSpecializedPartialSpecialization;
void  (::clang::Sema::*method_pointer_ae6995bddd7451d6acd9a2cd316db40c)()= &::clang::Sema::PrintInstantiationStack;
bool  (::clang::Sema::*method_pointer_4ee4a0d382b15231bbb320fa83c9fb31)()const= &::clang::Sema::isUnevaluatedContext;
void  (::clang::Sema::*method_pointer_08d61afc4ed952cb8db47d7ffdc78599)(bool )= &::clang::Sema::PerformPendingInstantiations;
void  (::clang::Sema::*method_pointer_7ff5aa2f8dfc56d7ba3fe497bde79406)(class ::clang::SourceLocation , class ::clang::FunctionDecl *)= &::clang::Sema::InstantiateExceptionSpec;
void  (::clang::Sema::*method_pointer_bf9196a3547a5730b88ba4074300d817)(class ::clang::SourceLocation , class ::clang::FunctionDecl *, bool , bool , bool )= &::clang::Sema::InstantiateFunctionDefinition;
void  (::clang::Sema::*method_pointer_f893ae98a0d95b8784e66d8e845a79f7)(class ::clang::SourceLocation , class ::clang::VarDecl *, bool , bool , bool )= &::clang::Sema::InstantiateVariableDefinition;
void  (::clang::Sema::*method_pointer_872da6116a245612b82c951e1c139ebe)(class ::clang::SourceLocation , class ::clang::VarDecl *, bool , bool )= &::clang::Sema::InstantiateStaticDataMemberDefinition;
bool  (::clang::Sema::*method_pointer_15ce507a4e435ac58f85a1c2e84eec95)(class ::clang::QualType &, class ::clang::SourceLocation )= &::clang::Sema::checkObjCKindOfType;
void  (::clang::Sema::*method_pointer_17ef952ed8b759c7997838ebe2f1af36)(class ::clang::Decl *, class ::clang::SourceLocation , unsigned int &, bool )= &::clang::Sema::CheckObjCPropertyAttributes;
void  (::clang::Sema::*method_pointer_093d7ba32ab253479bf681be7bc5cc26)(class ::clang::ObjCPropertyDecl *)= &::clang::Sema::ProcessPropertyDecl;
void  (::clang::Sema::*method_pointer_68e5811c60115312b678049fafde528d)(class ::clang::ObjCCategoryDecl *, class ::clang::ObjCInterfaceDecl *)= &::clang::Sema::DiagnoseClassExtensionDupMethods;
bool  (::clang::Sema::*method_pointer_b79fb18c5dda579097a9d2bc91a05734)(class ::clang::ObjCMethodDecl *)= &::clang::Sema::CheckARCMethodDecl;
bool  (::clang::Sema::*method_pointer_5d1dba6d02075cf3a4d60f90d664fabd)(class ::clang::ValueDecl *)= &::clang::Sema::inferObjCARCLifetime;
class ::clang::ObjCMethodDecl * (::clang::Sema::*method_pointer_fd3bc3c173a957afaac278054832009f)(class ::clang::SourceLocation )= &::clang::Sema::tryCaptureObjCSelf;
bool  (::clang::Sema::*method_pointer_accf16fc4cd15596bd3a6fd14c271ccc)(class ::clang::ObjCMethodDecl *, class ::clang::QualType )= &::clang::Sema::checkInitMethod;
void  (::clang::Sema::*method_pointer_e3040b002f3153e0ba129f26bb3759a0)(class ::clang::ObjCMethodDecl *, class ::clang::ObjCMethodDecl const *)= &::clang::Sema::CheckObjCMethodOverride;
bool  (::clang::Sema::*method_pointer_b5dabcc6a6b2579db20ec55ae953d60b)(class ::llvm::StringRef , int , class ::clang::DeclaratorDecl *)= &::clang::Sema::UnifySection;
bool  (::clang::Sema::*method_pointer_68f120ef072c57c89c3e7490cb611fd1)(class ::llvm::StringRef , int , class ::clang::SourceLocation )= &::clang::Sema::UnifySection;
void  (::clang::Sema::*method_pointer_7381cc0469215302b46368f576bf3a16)(class ::clang::SourceLocation , class ::llvm::StringRef , class ::llvm::StringRef )= &::clang::Sema::ActOnPragmaDetectMismatch;
void  (::clang::Sema::*method_pointer_11bbf744254e51848144d97d38a28fbd)(class ::clang::RecordDecl *)= &::clang::Sema::AddAlignmentAttributesForRecord;
void  (::clang::Sema::*method_pointer_0e46198a43a15deeb30b1d1fa315448d)(class ::clang::RecordDecl *)= &::clang::Sema::AddMsStructLayoutForRecord;
void  (::clang::Sema::*method_pointer_3f1db22e81835aca9b208a18d07c5c94)()= &::clang::Sema::FreePackedContext;
void  (::clang::Sema::*method_pointer_9045e2ad93c053dbaec4b93c4b50e1d9)(class ::clang::Decl *)= &::clang::Sema::AddPushedVisibilityAttribute;
void  (::clang::Sema::*method_pointer_ba20403dcbb5519382a98d145490248b)(bool , class ::clang::SourceLocation )= &::clang::Sema::PopPragmaVisibility;
void  (::clang::Sema::*method_pointer_9b4538195e455b4baae0cc784b59639d)()= &::clang::Sema::FreeVisContext;
void  (::clang::Sema::*method_pointer_c68f23f59d185c2d8f847d84888350c7)(class ::clang::Decl *)= &::clang::Sema::AddCFAuditedAttribute;
void  (::clang::Sema::*method_pointer_62758aa623db5258aa3289ccdbe521ae)(bool , class ::clang::SourceLocation )= &::clang::Sema::ActOnPragmaOptimize;
class ::clang::SourceLocation  (::clang::Sema::*method_pointer_62de525bf8a058b19dc66842b9525a2b)()const= &::clang::Sema::getOptimizeOffPragmaLocation;
void  (::clang::Sema::*method_pointer_2b67dc7af75954f3be69044eaead8d3b)(class ::clang::FunctionDecl *)= &::clang::Sema::AddRangeBasedOptnone;
void  (::clang::Sema::*method_pointer_7268d4a7fc54535f989444f59a7e5984)(class ::clang::FunctionDecl *, class ::clang::SourceLocation )= &::clang::Sema::AddOptnoneAttributeIfNoConflicts;
class ::llvm::StringRef  (::clang::Sema::*method_pointer_5c8e5e46324c53c2a9410068f5aaf88f)()const= &::clang::Sema::getCurrentOpenCLExtension;
void  (::clang::Sema::*method_pointer_b8accf24a0695be8b449c59375ea23f3)(class ::llvm::StringRef )= &::clang::Sema::setCurrentOpenCLExtension;
void  (::clang::Sema::*method_pointer_064f2454f6ad53329e35b3e47da12523)(class ::clang::QualType , class ::llvm::StringRef )= &::clang::Sema::setOpenCLExtensionForType;
void  (::clang::Sema::*method_pointer_cb7f0654ad6e52178f08b1110c670328)(class ::clang::Decl *, class ::llvm::StringRef )= &::clang::Sema::setOpenCLExtensionForDecl;
void  (::clang::Sema::*method_pointer_9a98e8a4c4db52838d2e86b63b08fc24)(class ::clang::QualType )= &::clang::Sema::setCurrentOpenCLExtensionForType;
void  (::clang::Sema::*method_pointer_3874bced21f65b14b3f20a39d95195dc)(class ::clang::Decl *)= &::clang::Sema::setCurrentOpenCLExtensionForDecl;
bool  (::clang::Sema::*method_pointer_0ff768176e4053a599bc1d557c52f5be)(class ::clang::Decl *)= &::clang::Sema::isOpenCLDisabledDecl;
bool  (::clang::Sema::*method_pointer_0d5501b20b5f522a85bf713bf38784f4)(class ::clang::ValueDecl *, unsigned int )= &::clang::Sema::IsOpenMPCapturedByRef;
class ::clang::VarDecl * (::clang::Sema::*method_pointer_4068331c19a1576ea15ad769fa74c2ff)(class ::clang::ValueDecl *)= &::clang::Sema::IsOpenMPCapturedDecl;
bool  (::clang::Sema::*method_pointer_7c06abfb0f97582cb1f623fd2e1ce9cf)(class ::clang::ValueDecl *, unsigned int )= &::clang::Sema::isOpenMPPrivateDecl;
bool  (::clang::Sema::*method_pointer_92b6687296c75b90905b6b2e5ca53e53)(class ::clang::ValueDecl *, unsigned int )= &::clang::Sema::isOpenMPTargetCapturedDecl;
void  (::clang::Sema::*method_pointer_7899a7d9b4a0582d8b3541fdfbd8f8e0)()= &::clang::Sema::EndOpenMPClause;
bool  (::clang::Sema::*method_pointer_b78f73f2e21555cd97dedcabca1e80d8)(class ::clang::SourceLocation )= &::clang::Sema::ActOnStartOpenMPDeclareTargetDirective;
void  (::clang::Sema::*method_pointer_60194a00898e5bd892a5e183f3c421ab)()= &::clang::Sema::ActOnFinishOpenMPDeclareTargetDirective;
bool  (::clang::Sema::*method_pointer_4c01c6e3dd7b5b209e167b31ac433f7f)()const= &::clang::Sema::isInOpenMPDeclareTargetContext;
class ::clang::QualType  (::clang::Sema::*method_pointer_660bde7d208b5dd28f96b4f4d2f6d48d)(class ::clang::QualType )= &::clang::Sema::GetSignedVectorType;
bool  (::clang::Sema::*method_pointer_f8e176f887815776bd58d1544adb82e5)(class ::clang::QualType , class ::clang::QualType )= &::clang::Sema::areLaxCompatibleVectorTypes;
bool  (::clang::Sema::*method_pointer_8fb66e876e2858e89df2958a1d8a868f)(class ::clang::QualType , class ::clang::QualType )= &::clang::Sema::isLaxVectorConversion;
bool  (::clang::Sema::*method_pointer_364f075f181f5bed9a79106318f81798)(class ::clang::QualType , class ::clang::QualType )= &::clang::Sema::CheckObjCARCUnavailableWeakConversion;
class ::clang::QualType  (::clang::Sema::*method_pointer_05b81a1acf275258847c410b693ff53f)(class ::clang::QualType , class ::clang::ObjCMethodDecl *, bool , bool )= &::clang::Sema::getMessageSendResultType;
void  (::clang::Sema::*method_pointer_b8677b478e6e51b3b4cc79fb94ed375f)(class ::clang::QualType )= &::clang::Sema::EmitRelatedResultTypeNoteForReturn;
bool  (::clang::Sema::*method_pointer_04b45b883ecf513dae1a1572d8284cfd)(class ::clang::Decl *)= &::clang::Sema::CheckObjCDeclScope;
void  (::clang::Sema::*method_pointer_17e29d9414c35d4c97279a5b30bd49ab)()= &::clang::Sema::PushForceCUDAHostDevice;
bool  (::clang::Sema::*method_pointer_eb002e93382a56e88bdad6bd353365e0)()= &::clang::Sema::PopForceCUDAHostDevice;
bool  (::clang::Sema::*method_pointer_a4bea69970b75d9385fb3c9ee86dc22b)(class ::clang::FunctionDecl const *, class ::clang::FunctionDecl const *)= &::clang::Sema::IsAllowedCUDACall;
bool  (::clang::Sema::*method_pointer_4bbc80ee1b865158a668df81c6434c6c)(class ::clang::SourceLocation , class ::clang::FunctionDecl *)= &::clang::Sema::CheckCUDACall;
void  (::clang::Sema::*method_pointer_83258306aed05b7cbc6c40ddd754fa91)(class ::clang::CXXMethodDecl *)= &::clang::Sema::CUDASetLambdaAttrs;
bool  (::clang::Sema::*method_pointer_07a5d873df99590b865afc36a7f6868f)(class ::clang::SourceLocation , class ::clang::CXXConstructorDecl *)= &::clang::Sema::isEmptyCudaConstructor;
bool  (::clang::Sema::*method_pointer_46c4daab3cde5e6eb7c846521b4e2037)(class ::clang::SourceLocation , class ::clang::CXXDestructorDecl *)= &::clang::Sema::isEmptyCudaDestructor;
void  (::clang::Sema::*method_pointer_0920f5d0796f5278b0e39fd97577cfb5)(class ::clang::FunctionDecl *, class ::clang::FunctionTemplateDecl const &)= &::clang::Sema::inheritCUDATargetAttrs;
void  (::clang::Sema::*method_pointer_ad321085bd165f6aa15605dfe8cd9bd0)(bool )= &::clang::Sema::CodeCompletePreprocessorDirective;
void  (::clang::Sema::*method_pointer_ec3b26b16b63506b86981ab98b0b9b73)(bool )= &::clang::Sema::CodeCompletePreprocessorMacroName;
void  (::clang::Sema::*method_pointer_aa1c5f0d78fb586f980d339c89e022a4)()= &::clang::Sema::CodeCompletePreprocessorExpression;
void  (::clang::Sema::*method_pointer_8b363788671553528501df65e417485c)()= &::clang::Sema::CodeCompleteNaturalLanguage;
void  (::clang::Sema::*method_pointer_09146387f7c550178999daeba135d15d)()const= &::clang::Sema::incrementMSManglingNumber;
class ::clang::Decl * (::clang::Sema::*method_pointer_7dc27192b1fd5d00a5c59472035c52f0)()const= &::clang::Sema::getObjCDeclContext;
class ::clang::DeclContext * (::clang::Sema::*method_pointer_b08bc0fb9d985004b7692dc68194d604)()const= &::clang::Sema::getCurLexicalContext;
class ::clang::DeclContext const * (::clang::Sema::*method_pointer_6d5ef056b03b54a898e463925f1f4e63)()const= &::clang::Sema::getCurObjCLexicalContext;
bool  (*method_pointer_7b151e77b874548ca22ddaa1035592bd)(::size_t , ::size_t , bool )= ::clang::Sema::TooManyArguments;
void  (::clang::Sema::*method_pointer_1d7cb1c1ea555470afa2ab76c07cff9d)()= &::clang::Sema::DiagnoseMisalignedMembers;

namespace autowig {
    void method_decorator_3236edd388a25058be6c05f55b222fbb(class ::clang::Sema const & instance, const class ::clang::SourceManager & param_out) { instance.getSourceManager() = param_out; }
    void method_decorator_6322bef8fbf45a2b9ff7efabefbaee64(class ::clang::Sema const & instance, const class ::clang::ASTContext & param_out) { instance.getASTContext() = param_out; }
}

void wrapper_334dd7441b7b543eae5426f290fe3a91(pybind11::module& module)
{

    pybind11::class_<class ::clang::Sema, autowig::HolderType< class ::clang::Sema >::Type > class_334dd7441b7b543eae5426f290fe3a91(module, "Sema", "");
    class_334dd7441b7b543eae5426f290fe3a91.def("load_external_weak_undeclared_identifiers", method_pointer_22f5fe66f9905c40974d1b86757687f8, "Load weak undeclared identifiers from the external source.\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("emit_current_diagnostic", method_pointer_2f934e9e32ad50439cb5864817cdfce7, "Cause the active diagnostic on the DiagosticsEngine to be emitted. This\nis closely coupled to the SemaDiagnosticBuilder class and should not be\nused elsewhere.\n\n:Parameter:\n    `DiagID` (:cpp:any:`unsigned` int) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("add_implicit_typedef", method_pointer_943ef8657bbc571d8c7084825a332db4, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("initialize", method_pointer_7f1b7667472f57e885106db08339caf5, "Perform initialization that occurs after the parser has been initialized\nbut before it parses anything.\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_source_manager", method_pointer_3236edd388a25058be6c05f55b222fbb, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_source_manager", autowig::method_decorator_3236edd388a25058be6c05f55b222fbb);
    class_334dd7441b7b543eae5426f290fe3a91.def("get_ast_context", method_pointer_6322bef8fbf45a2b9ff7efabefbaee64, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_ast_context", autowig::method_decorator_6322bef8fbf45a2b9ff7efabefbaee64);
    class_334dd7441b7b543eae5426f290fe3a91.def("print_stats", method_pointer_d66ccf302783573e9ec92bda3d5dbf04, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("find_macro_spelling", method_pointer_5504fe0e70605e56b5eb41879dbcf28d, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_loc_for_end_of_token", method_pointer_d03dac7c85e4510cbe943273020f3349, "Calls :raw-latex:`\\c Lexer::getLocForEndOfToken()`\n\n:Parameters:\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `Offset` (:cpp:any:`unsigned` int) - Undocumented\n\n:Return Type:\n    :cpp:class:`::clang::SourceLocation`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("emit_and_clear_unused_local_typedef_warnings", method_pointer_834b613425c45804ad54f9f784eaa6cf, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_end_of_translation_unit", method_pointer_1a330bd9c1495b6581a6db364474b269, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_delegating_ctor_cycles", method_pointer_99dbb289ba78560d89cd1681fe607819, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("push_function_scope", method_pointer_03ed71dbfa01552498d9b694d33b8621, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("record_parsing_template_parameter_depth", method_pointer_f64095376b565784aab76e4323820792, "This is used to inform Sema what the current TemplateParameterDepth is\nduring Parsing. Currently it is used to pass on the depth when parsing\ngeneric lambda ‘auto’ parameters.\n\n:Parameter:\n    `Depth` (:cpp:any:`unsigned` int) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("push_compound_scope", method_pointer_961e05c9712f5c09b1c34dfb4f21910d, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("pop_compound_scope", method_pointer_52afdcb34dc657de867a9785ed52a74d, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("has_any_unrecoverable_errors_in_this_function", method_pointer_af582f3fa7cf5156b57e8681f942c16f, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_function_return_type", method_pointer_8d1534aa50355ed0b700f2322937e211, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("build_paren_type", method_pointer_4182b635783f5f48a636175391c0e2ab, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("build_atomic_type", method_pointer_bdafebd515dc542b8a4b70c9dde20769, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("build_read_pipe_type", method_pointer_84b361f705105b7785cdb86fd6a465ee, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("build_write_pipe_type", method_pointer_d9a428944f1e5b2284298a4c12bc6d24, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("resolve_exception_spec", method_pointer_33bc59270e775b95beb871f49bca7d69, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_distant_exception_spec", method_pointer_3587824f8c6d5c018cc24bf685464d50, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_equivalent_exception_spec", method_pointer_7f5ed84dad115d5b9014f540afbd8e68, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_equivalent_exception_spec", method_pointer_b412139b0848564690639f6d705fada8, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_static("get_printable", method_pointer_35939176278055b0a7187ebfd4fbeb03, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_static("get_printable", method_pointer_bd37f891e95757629269275ebb095d3d, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_static("get_printable", method_pointer_ccef913c3f835a569c01d8f3a2653a8a, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_static("get_printable", method_pointer_24b3dd53b1005e0ab84736554d1be342, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_static("get_printable", method_pointer_04a72f55f6ce516eb11b7c90d77cb9e5, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("make_merged_definition_visible", method_pointer_da5c7bd9645e584d9ef1722c009264fd, "Make a merged definition of an existing hidden definition\n:raw-latex:`\\p `ND visible at the specified location.\n\n:Parameters:\n  - `ND` (:cpp:class:`::clang::NamedDecl`) - Undocumented\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_visible", method_pointer_3b9cb409097a536e812df153900a6024, ":Parameter:\n    `D` (:cpp:class:`::clang::NamedDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("has_visible_merged_definition", method_pointer_de545c3f21c15944938c05e3f6c3c578, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("has_visible_definition", method_pointer_57008e5f52d45a47b1ecfe3557de7290, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_equivalent_internal_linkage_declaration", method_pointer_efa6570cb0ce5708a5709ef26a1d059f, ":Parameters:\n  - `A` (:cpp:class:`::clang::NamedDecl`) - Undocumented\n  - `B` (:cpp:class:`::clang::NamedDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_complete_type", method_pointer_af4465316a695b678643e1e484355fcf, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("require_complete_type", method_pointer_434e85f81c1c5e9bb14809af58c0edf6, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("require_literal_type", method_pointer_f51212f0c723581f9a13e8e3c9e0a397, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_use_of_unimplemented_selectors", method_pointer_5220603aadb454d1a2316df88e16b3de, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_ignored_qualifiers", method_pointer_2f2283e263b653be8f688bd3aef4f2f4, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("set_tag_name_for_linkage_purposes", method_pointer_2ff3226eb2795771b92c991f971a262f, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_variable_declaration_type", method_pointer_4c6080be1dfc5bbbaa3051294a12ad26, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_complete_variable_declaration", method_pointer_5849a47130b257d2a730a3dc7e93fefa, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_complete_decomposition_declaration", method_pointer_36ae31f45a345fd8b4bd2571b58516b4, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("maybe_suggest_adding_static_to_decl", method_pointer_1c65ad4a5aaf5263a02dfcdcbc5b4a35, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("add_overridden_methods", method_pointer_5aea844dfaac59bb90876ac37804cb53, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_constexpr_function_decl", method_pointer_c7250fc9410650f4964ea1e1e616a7f4, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_hidden_virtual_methods", method_pointer_c53b7d1aeda5597abf3186de89970bd4, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("should_link_dependent_decl_with_previous", method_pointer_f9f19d5fc8f651148c8c369813d009eb, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_msvcrt_entry_point", method_pointer_7fe127f9ffc450d590f21beb90cc2dc3, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("build_parm_var_decl_for_typedef", method_pointer_66d2bbf9b4a35d18ae05891c0a3206b1, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_param_unparsed_default_argument", method_pointer_35e3d2728c745494bfbcf0e020ee296f, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_param_default_argument_error", method_pointer_b3f300e788a85c2a82632fb85f5bac68, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_uninitialized_decl", method_pointer_0a2f45b80c475009a7145cabcbdf9309, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_initializer_error", method_pointer_fbfd166d3a3258108ba460c49cce28f9, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("can_initialize_with_parenthesized_list", method_pointer_2383d82a6d295a2ea2158f9b28645b00, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_pure_specifier", method_pointer_3548064a02d15984b691858d20ea07f3, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_cxx_for_range_decl", method_pointer_873c844cd1ce5452ab9a04c8e0e5b1c5, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("set_decl_deleted", method_pointer_a2cb242eec605154a35014703e38b605, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("set_decl_defaulted", method_pointer_65eb84d0f96a512282eecc223b78419d, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("finalize_declaration", method_pointer_fc28147e3a3a57988189279ba430ea14, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_documentable_decl", method_pointer_09b387ea1e2c568d99248c3940375a7c, ":Parameter:\n    `D` (:cpp:class:`::clang::Decl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_obj_c_method_decl", method_pointer_7335059c99575ce1889ab28ea16667b5, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("can_skip_function_body", method_pointer_47eb43e1fc495dba857cd0a22fba5b8f, "Determine whether we can skip parsing the body of a function definition,\nassuming we don’t care about analyzing its body or emitting code for\nthat function.\n\nThis will be\n:raw-latex:`\\c false only if we may need the body of the function in\norder to parse the rest of the program (for instance, if it is`\n\n:Parameter:\n    `D` (:cpp:class:`::clang::Decl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_skipped_function_body", method_pointer_8887441a3cc85f5e9c58c7fc28aeffed, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_finish_inline_function_def", method_pointer_6dd769d9ff6951748e824112311e8285, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_specialization_visibility", method_pointer_4c597bb479155d6fb71679d1a9da8e61, "We’ve found a use of a templated declaration that would trigger an\nimplicit instantiation. Check that any relevant explicit specializations\nand partial specializations are visible, and diagnose if not.\n\n:Parameters:\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `Spec` (:cpp:class:`::clang::NamedDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_partial_specialization_visibility", method_pointer_fe7be370e2e751b089b2000225d0a88d, "We’ve found a use of a template specialization that would select a\npartial specialization. Check that the partial specialization is\nvisible, and diagnose if not.\n\n:Parameters:\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `Spec` (:cpp:class:`::clang::NamedDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_nontrivial_field", method_pointer_0bd5663a283a538a82bedd1b0923bff8, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_obj_c_container_start_definition", method_pointer_0c954215410b53a3970e0fab6e3a0178, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_obj_c_container_finish_definition", method_pointer_66497223e04b5953aaf9986bc69010ff, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_obj_c_temporary_exit_container_context", method_pointer_2eeb0958a286549a8fb96b84729b8612, "Invoked when we must temporarily exit the objective-c container scope\nfor parsing/looking-up C constructs.\n\nMust be followed by a call to\n:raw-latex:`\\see `ActOnObjCReenterContainerContext\n\n:Parameter:\n    `DC` (:cpp:class:`::clang::DeclContext`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_obj_c_reenter_container_context", method_pointer_93568c52db1c5776a2c6d3b4f460a0ab, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_enum_redeclaration", method_pointer_470a3481441155478cb62723a2d0921f, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_containing_dc", method_pointer_e6c82589630b5a95acb2fd7f1b01de7f, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("pop_decl_context", method_pointer_d2068b9171af53d98fd1fa600c9b81cb, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_exit_function_context", method_pointer_9de9c0f675f053ab901d6057cfe6f048, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_function_level_decl_context", method_pointer_c9d81126de065e488a00587c30c3ef8e, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_cur_function_decl", method_pointer_bf29205dc02c5daba99ab664324bf88e, pybind11::return_value_policy::reference_internal, ":Return Type:\n    :cpp:class:`::clang::FunctionDecl`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_cur_method_decl", method_pointer_3b381e76ef73514b999a3e65417428e4, pybind11::return_value_policy::reference_internal, ":Return Type:\n    :cpp:class:`::clang::ObjCMethodDecl`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_cur_function_or_method_decl", method_pointer_03cf0253966857239b4a4ef0203585b6, pybind11::return_value_policy::reference_internal, ":Return Type:\n    :cpp:class:`::clang::NamedDecl`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_incompatible_typedef", method_pointer_e4059a6a6ed15e4090b90cd4399d6969, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("merge_obj_c_method_decls", method_pointer_6896cb578b775065b8631807d475d200, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("merge_var_decl_types", method_pointer_a9f6ef0fa8e151d89d3f6ed7319015dd, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("merge_var_decl_exception_specs", method_pointer_e3bb38b301f8551ca7616216996033be, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_var_decl_redefinition", method_pointer_209db7b6ef24539c80adb4d4f62dbfda, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_overload", method_pointer_468ca8c4c2805675bc59bfe8eca03dde, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_function_considered_unavailable", method_pointer_374dc92bb62a59debe477c10b2cf59bc, "Checks availability of the function depending on the current function\ncontext.Inside an unavailable function,unavailability is ignored.\n\n:Parameter:\n    `FD` (:cpp:class:`::clang::FunctionDecl`) - Undocumented\n\n:Returns:\n    true if :raw-latex:`\\p `FD is unavailable and current context is inside\n    an available function, false otherwise.\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_floating_point_promotion", method_pointer_0713c5b0534758c7ac5b485f0cba2cd2, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_complex_promotion", method_pointer_585a7eacc0ad50618e65e8929f6c95c2, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_obj_c_pointer_conversion", method_pointer_5e72f5fb85915a5396877ba510890fa0, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_obj_c_writeback_conversion", method_pointer_7e42f9632c0252859ff32cda05828308, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_block_pointer_conversion", method_pointer_8821f9ff786a5b06b72b728e5ef50f51, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_qualification_conversion", method_pointer_ebd94978a9d557abb0f9fbd95cb4270c, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_function_conversion", method_pointer_d99fd0a4821d51c2be107d3369ece1a5, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("note_overload_candidate", method_pointer_c6778dfcdcb95fa7a386e887e7aade03, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_arg_independent_diagnose_if_attrs", method_pointer_b7f6882df4f45d6083e67a8e0e4dcdd1, ":Parameters:\n  - `Function` (:cpp:class:`::clang::FunctionDecl`) - Undocumented\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_address_of_function_is_available", method_pointer_f9b18aaddeb653cdbe562a22edaf4017, ":Parameters:\n  - `Function` (:cpp:class:`::clang::FunctionDecl`) - Undocumented\n  - `Complain` (:cpp:any:`bool`) - Undocumented\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("extract_unqualified_function_type", method_pointer_91f961e58bdf5887b47af591dc5a1743, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_cxx_default_arguments", method_pointer_0851d0785370525f9048c3b137c15515, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("lookup_default_constructor", method_pointer_5fb70a47c89a577881a5db1ebf1e59e2, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("lookup_copying_constructor", method_pointer_d40497f3e51752aa8b933a5260683e2a, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("lookup_copying_assignment", method_pointer_78ffc6dce7b25dd499f397f218031e30, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("lookup_moving_constructor", method_pointer_7d5fbae89bfc5ce68986051b5c9f09b3, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("lookup_moving_assignment", method_pointer_4e44c12217855341a6cdd9b0fe71d142, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("lookup_destructor", method_pointer_3e698b378c945204aa86f4714a6a7c45, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_known_name", method_pointer_cb01ff8ff9f7581f91455eb5d82d0eff, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("add_known_function_attributes", method_pointer_39dc71c12c7055ca94afafafd02336a4, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_valid_pointer_attr_type", method_pointer_5b4efaf5d0d35a4cb3c94e9708b6af98, ":Parameters:\n  - `T` (:cpp:class:`::clang::QualType`) - Undocumented\n  - `RefOkay` (:cpp:any:`bool`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_section_name", method_pointer_d2ba17043d3d526f8b945e628f094619, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_target_attr", method_pointer_afd291ae58465a79a23426bf5473bdcb, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_alignas_underalignment", method_pointer_0db3b479cd945333b169d1935b7d7150, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("adjust_member_function_cc", method_pointer_ee93f8aab8db5be6bbe0f1814727b8e6, ":Parameters:\n  - `T` (:cpp:class:`::clang::QualType`) - Undocumented\n  - `IsStatic` (:cpp:any:`bool`) - Undocumented\n  - `IsCtorOrDtor` (:cpp:any:`bool`) - Undocumented\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("has_explicit_calling_conv", method_pointer_c650fc55996a5d2dae1a0b8db7355807, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_calling_conv_attributed_type", method_pointer_31e4dcf929105f6e833091118b2a2b17, pybind11::return_value_policy::reference_internal, ":Parameter:\n    `T` (:cpp:class:`::clang::QualType`) - Undocumented\n\n:Return Type:\n    :cpp:class:`::clang::AttributedType`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("warn_conflicting_typed_methods", method_pointer_f62073ab96bd5dacbd218f6047616f01, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_conflicting_overriding_method", method_pointer_a0dcf68b09cc5d78a2242041c4fdc8b3, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("warn_exact_typed_methods", method_pointer_ecac7ffad47a5b05bc642ceb52443fd6, ":Parameters:\n  - `Method` (:cpp:class:`::clang::ObjCMethodDecl`) - Undocumented\n  - `MethodDecl` (:cpp:class:`::clang::ObjCMethodDecl`) - Undocumented\n  - `IsProtocolMethodDecl` (:cpp:any:`bool`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_null_resettable_synthesized_setters", method_pointer_f18a4cd89b3b5d4da43e85ad693d6bc7, ":Parameter:\n    `impDecl` (:cpp:class:`::clang::ObjCImplDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("ivar_backs_current_method_accessor", method_pointer_081057693242578f92a376ccfc136e53, ":Parameters:\n  - `IFace` (:cpp:class:`::clang::ObjCInterfaceDecl`) - Undocumented\n  - `Method` (:cpp:class:`::clang::ObjCMethodDecl`) - Undocumented\n  - `IV` (:cpp:class:`::clang::ObjCIvarDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("atomic_property_setter_getter_rules", method_pointer_1a4b557df35759ae9a8cb1af076a9095, ":Parameters:\n  - `IMPDecl` (:cpp:class:`::clang::ObjCImplDecl`) - Undocumented\n  - `IDecl` (:cpp:class:`::clang::ObjCInterfaceDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_owning_property_getter_synthesis", method_pointer_c23e4d1f837f53099e8a4f9a48b9ed1b, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_missing_designated_init_overrides", method_pointer_5bdde8ed23e85bf38e951cf15f1d742b, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_duplicate_ivars", method_pointer_d7fe663efa145b81bbfd97a494ea60e6, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_category_vs_class_method_matches", method_pointer_8092a099955459b19f5aa0920468fe04, ":Parameter:\n    `CatIMP` (:cpp:class:`::clang::ObjCCategoryImplDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("add_instance_method_to_global_pool", method_pointer_05197948eb945768b3488ddc83dddb00, ":Parameters:\n  - `Method` (:cpp:class:`::clang::ObjCMethodDecl`) - Undocumented\n  - `impl` (:cpp:any:`bool`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("add_factory_method_to_global_pool", method_pointer_458e8bda279d5b15a9c925010860202a, ":Parameters:\n  - `Method` (:cpp:class:`::clang::ObjCMethodDecl`) - Undocumented\n  - `impl` (:cpp:any:`bool`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("add_any_method_to_global_pool", method_pointer_7a7dd7e0a5005b6a8f6503dd87859b71, ":Parameter:\n    `D` (:cpp:class:`::clang::Decl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_start_of_compound_stmt", method_pointer_89e10a22b2e85a8294059e5e75876046, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_finish_of_compound_stmt", method_pointer_7df5a55591925233b6e9dc803b609522, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_captured_region_error", method_pointer_b421eae7cee1516bb99fccc7a3ef9f39, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_copy_elision_candidate", method_pointer_179de9075ca4578bb873da4e5d991649, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("lookup_inline_asm_field", method_pointer_7b8ae8b3e84d5422bb7e9626781f3c93, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_or_create_ms_asm_label", method_pointer_af33d563a66859389a3991f978a313dc, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_start_seh_finally_block", method_pointer_e84ef64c18e65573bd6e04044876a1c0, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_abort_seh_finally_block", method_pointer_7db90a96cb6a5415b475bffbbd7593f5, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("should_warn_if_unused_file_scoped_decl", method_pointer_c19fa26a45b15fde85871fb1eac198a5, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("mark_unused_file_scoped_decl", method_pointer_3ea1ad462a19543b98c7f4ebc66b9ced, "If it’s a file scoped decl that must warn if not used, keep track of it.\n\n:Parameter:\n    `D` (:cpp:class:`::clang::DeclaratorDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_unused_nested_typedefs", method_pointer_827e9a16cdcd55129cd8ad02909fc9f3, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_unused_decl", method_pointer_7bc098e18f66504ca45f09fc5cf71b22, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_nullable_to_nonnull_conversion", method_pointer_0cc449eb4d0259b8b5708bf4dffd4584, "Warn if we’re implicitly casting from a \\_Nullable pointer type to a\n\\_Nonnull one.\n\n:Parameters:\n  - `DstType` (:cpp:class:`::clang::QualType`) - Undocumented\n  - `SrcType` (:cpp:class:`::clang::QualType`) - Undocumented\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_unguarded_availability_violations", method_pointer_1798c32e377e59cdb3cc687a3b7a7888, "Issue any -Wunguarded-availability warnings in :raw-latex:`\\c FD`\n\n:Parameter:\n    `FD` (:cpp:class:`::clang::Decl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("can_use_decl", method_pointer_ed3ca1a4123958ce966505445424b005, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_use_of_decl", method_pointer_fd3d698189825dfc9603d79472a75dec, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("note_deleted_function", method_pointer_2f2e9747007e586f9be4f0eb48a99c55, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("note_deleted_inheriting_constructor", method_pointer_bb2004ece3a35ab1a23e7445655b28c7, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_property_accessor_mismatch", method_pointer_bfc9e0e316d45d3cb7a25104dde49633, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("pop_expression_evaluation_context", method_pointer_a8bd46cf14e952f0aef3ef5d75e3f545, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("discard_cleanups_in_evaluation_context", method_pointer_7bef9a8938e753bd85bd730d3ce5cd5d, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("mark_any_decl_referenced", method_pointer_d4f2f45c9beb59d1b1dc39c44143cc9e, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("mark_function_referenced", method_pointer_2573d0f39d6e545e880c1003382b8f81, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("mark_variable_referenced", method_pointer_0738f60454cc5d6a9f43d5073a6113d3, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("cleanup_var_decl_marking", method_pointer_cc2eb244918d5c8fbb199ce60bd3f18c, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("need_to_capture_variable", method_pointer_11977ad3369b5302ba8759f6550a1dde, "Checks if the variable must be captured.\n\n:Parameters:\n  - `Var` (:cpp:class:`::clang::VarDecl`) - Undocumented\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_captured_decl_ref_type", method_pointer_6c498f31ef505bcda28d92fb6231d6df, "Given a variable, determine the type that a reference to that variable\nwill have in the given scope.\n\n:Parameters:\n  - `Var` (:cpp:class:`::clang::VarDecl`) - Undocumented\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n\n:Return Type:\n    :cpp:class:`::clang::QualType`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("mark_declarations_referenced_in_type", method_pointer_bfffcdd0a3af5404b7ae6c59676661a4, ":Parameters:\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `T` (:cpp:class:`::clang::QualType`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_default_ctor_initializers", method_pointer_fbdf6f5b697e523e9f4b51cdef298988, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_start_stmt_expr", method_pointer_edcd07fcee8a5d6d98a1962055cdf994, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_stmt_expr_error", method_pointer_41f511ac5bb551309d45a2341d73ea0e, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_finish_namespace_def", method_pointer_c01d8385bab75bbca384766b90fc17c6, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_std_namespace", method_pointer_a272d0598a2751aa9c5a4a08ae5dda77, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_or_create_std_namespace", method_pointer_c840613714f95827977de4f27be2974a, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("lookup_std_experimental_namespace", method_pointer_f021f0c91d7d5ecbaac3fdcbeb8d0f3c, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_std_bad_alloc", method_pointer_87929e6b5af652f3b4414cae8181fb01, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_std_align_val_t", method_pointer_f72124cb764b52888e907fbf917cfcdf, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_std_initializer_list", method_pointer_324fcdddc2775bcf9a860dc627972784, "Tests whether Ty is an instance of std::initializer_list and, if it is\nand Element is not NULL, assigns the element type to Element.\n\n:Parameters:\n  - `Ty` (:cpp:class:`::clang::QualType`) - Undocumented\n  - `Element` (:cpp:class:`::clang::QualType`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("build_std_initializer_list", method_pointer_fb870b11aba353178f406234bea1f97d, "Looks for the std::initializer_list template and instantiates it with\nElement, or emits an error if it’s not found.\n\n:Parameters:\n  - `Element` (:cpp:class:`::clang::QualType`) - Undocumented\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n\n:Returns:\n    The instantiated template, or null on error.\n\n:Return Type:\n    :cpp:class:`::clang::QualType`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_init_list_constructor", method_pointer_e136d7756d0a5687ad241869680b77f6, "Determine whether Ctor is an initializer-list constructor, as defined in\n[dcl.init.list]p2.\n\n:Parameter:\n    `Ctor` (:cpp:class:`::clang::CXXConstructorDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_inheriting_constructor_using_decl", method_pointer_5365c1a79d565754b1c007ed37fac744, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("find_inheriting_constructor", method_pointer_66d8dc38adbf5d3bb42887fc8f427f24, pybind11::return_value_policy::reference_internal, ":Parameters:\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `BaseCtor` (:cpp:class:`::clang::CXXConstructorDecl`) - Undocumented\n  - `DerivedShadow` (:cpp:class:`::clang::ConstructorUsingShadowDecl`) - Undocumented\n\n:Return Type:\n    :cpp:class:`::clang::CXXConstructorDecl`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_cxx_default_arg_expr", method_pointer_7afbb4517f0e598fa449d279297d48db, ":Parameters:\n  - `CallLoc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `FD` (:cpp:class:`::clang::FunctionDecl`) - Undocumented\n  - `Param` (:cpp:class:`::clang::ParmVarDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("finalize_var_with_destructor", method_pointer_807633541706525aa4f18cd85f1b87b9, ":Parameters:\n  - `VD` (:cpp:class:`::clang::VarDecl`) - Undocumented\n  - `DeclInitType` (:cpp:class:`::clang::RecordType`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("evaluate_implicit_exception_spec", method_pointer_58b11388b42055ef965fdbcf04bb5a74, "Evaluate the implicit exception specification for a defaulted special\nmember function.\n\n:Parameters:\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `MD` (:cpp:class:`::clang::CXXMethodDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("declare_implicit_default_constructor", method_pointer_b4e5976b6b0b5c0fa8ac92a9933a3e6d, pybind11::return_value_policy::reference_internal, "Declare the implicit default constructor for the given class.\n\n:Parameter:\n    `ClassDecl` (:cpp:class:`::clang::CXXRecordDecl`) - The class declaration into which the implicit default constructor will\n                                                        be added.\n\n:Returns:\n    The implicitly-declared default constructor.\n\n:Return Type:\n    :cpp:class:`::clang::CXXConstructorDecl`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("define_implicit_default_constructor", method_pointer_e8ae43b4e9e85c3b9acf0739521e6bf3, ":Parameters:\n  - `CurrentLocation` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `Constructor` (:cpp:class:`::clang::CXXConstructorDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("declare_implicit_destructor", method_pointer_022e1d99b9c151ffb6dcd40662cc1fa6, pybind11::return_value_policy::reference_internal, "Declare the implicit destructor for the given class.\n\n:Parameter:\n    `ClassDecl` (:cpp:class:`::clang::CXXRecordDecl`) - The class declaration into which the implicit destructor will be added.\n\n:Returns:\n    The implicitly-declared destructor.\n\n:Return Type:\n    :cpp:class:`::clang::CXXDestructorDecl`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("define_implicit_destructor", method_pointer_278377c3710252df84d834f90feb4ac6, ":Parameters:\n  - `CurrentLocation` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `Destructor` (:cpp:class:`::clang::CXXDestructorDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("adjust_destructor_exception_spec", method_pointer_c076e5d9f48f5c6599667d8f609a59b6, "Build an exception spec for destructors that don’t have one.\n\nC++11 says that user-defined destructors with no exception spec get one\nthat looks as if the destructor was implicitly declared.\n\n:Parameters:\n  - `ClassDecl` (:cpp:class:`::clang::CXXRecordDecl`) - Undocumented\n  - `Destructor` (:cpp:class:`::clang::CXXDestructorDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("define_inheriting_constructor", method_pointer_160203b095d953949a073c455d97b272, "Define the specified inheriting constructor.\n\n:Parameters:\n  - `UseLoc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `Constructor` (:cpp:class:`::clang::CXXConstructorDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("declare_implicit_copy_constructor", method_pointer_160985acb11b530e942b9a5c09ddeef3, pybind11::return_value_policy::reference_internal, "Declare the implicit copy constructor for the given class.\n\n:Parameter:\n    `ClassDecl` (:cpp:class:`::clang::CXXRecordDecl`) - The class declaration into which the implicit copy constructor will be\n                                                        added.\n\n:Returns:\n    The implicitly-declared copy constructor.\n\n:Return Type:\n    :cpp:class:`::clang::CXXConstructorDecl`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("define_implicit_copy_constructor", method_pointer_0414b15bd6535fafaaccfd6e9a79b273, ":Parameters:\n  - `CurrentLocation` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `Constructor` (:cpp:class:`::clang::CXXConstructorDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("declare_implicit_move_constructor", method_pointer_1585888ed49a53e4bb37bd0fb89346d4, pybind11::return_value_policy::reference_internal, "Declare the implicit move constructor for the given class.\n\n:Parameter:\n    `ClassDecl` (:cpp:class:`::clang::CXXRecordDecl`) - The Class declaration into which the implicit move constructor will be\n                                                        added.\n\n:Returns:\n    The implicitly-declared move constructor, or NULL if it wasn’t declared.\n\n:Return Type:\n    :cpp:class:`::clang::CXXConstructorDecl`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("define_implicit_move_constructor", method_pointer_25ba5e2a90f55084a177f2c96bb7c114, ":Parameters:\n  - `CurrentLocation` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `Constructor` (:cpp:class:`::clang::CXXConstructorDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("declare_implicit_copy_assignment", method_pointer_3880da898f0752a986e50ca7d09a83f7, pybind11::return_value_policy::reference_internal, "Declare the implicit copy assignment operator for the given class.\n\n:Parameter:\n    `ClassDecl` (:cpp:class:`::clang::CXXRecordDecl`) - The class declaration into which the implicit copy assignment operator\n                                                        will be added.\n\n:Returns:\n    The implicitly-declared copy assignment operator.\n\n:Return Type:\n    :cpp:class:`::clang::CXXMethodDecl`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("define_implicit_copy_assignment", method_pointer_396ec4d31e16594881ac5e7f164fb4fc, "Defines an implicitly-declared copy assignment operator.\n\n:Parameters:\n  - `CurrentLocation` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `MethodDecl` (:cpp:class:`::clang::CXXMethodDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("declare_implicit_move_assignment", method_pointer_a075c5c8d5c65d53a9f51893df14b78a, pybind11::return_value_policy::reference_internal, "Declare the implicit move assignment operator for the given class.\n\n:Parameter:\n    `ClassDecl` (:cpp:class:`::clang::CXXRecordDecl`) - The Class declaration into which the implicit move assignment operator\n                                                        will be added.\n\n:Returns:\n    The implicitly-declared move assignment operator, or NULL if it wasn’t\n    declared.\n\n:Return Type:\n    :cpp:class:`::clang::CXXMethodDecl`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("define_implicit_move_assignment", method_pointer_36f755c2a2ba5dfcbdf77259f1903fbc, "Defines an implicitly-declared move assignment operator.\n\n:Parameters:\n  - `CurrentLocation` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `MethodDecl` (:cpp:class:`::clang::CXXMethodDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("force_declaration_of_implicit_members", method_pointer_aff3696afb4858cebdba58d8fc0caecb, "Force the declaration of any implicitly-declared members of this class.\n\n:Parameter:\n    `Class` (:cpp:class:`::clang::CXXRecordDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_implicitly_deleted", method_pointer_fdace404dfc659b3bd0d80e4aea8b3f0, "Determine whether the given function is an implicitly-deleted special\nmember function.\n\n:Parameter:\n    `FD` (:cpp:class:`::clang::FunctionDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_this_in_static_member_function_type", method_pointer_a882c07afa5f53f590f24ced85fe98ce, "Check whether ‘this’ shows up in the type of a static member function\nafter the (naturally empty) cv-qualifier-seq would be.\n\n:Parameter:\n    `Method` (:cpp:class:`::clang::CXXMethodDecl`) - Undocumented\n\n:Returns:\n    true if an error occurred.\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_this_in_static_member_function_exception_spec", method_pointer_1dafe7445876592c970f60e143bca02c, "Whether this’ shows up in the exception specification of a static member\nfunction.\n\n:Parameter:\n    `Method` (:cpp:class:`::clang::CXXMethodDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_this_in_static_member_function_attributes", method_pointer_5d2417847471595e855aa543c7288d12, "Check whether ‘this’ shows up in the attributes of the given static\nmember function.\n\n:Parameter:\n    `Method` (:cpp:class:`::clang::CXXMethodDecl`) - Undocumented\n\n:Returns:\n    true if an error occurred.\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_current_this_type", method_pointer_be458959dc3f54afa1633a860fa403fd, "Try to retrieve the type of the ‘this’ pointer.\n\n:Returns:\n    The type of ‘this’, if possible. Otherwise, returns a NULL type.\n\n:Return Type:\n    :cpp:class:`::clang::QualType`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_this_outside_member_function_body", method_pointer_ee9c231b1a255ba0afecab4b94e1ae76, "Determine whether the given type is the type of \\*this that is used\noutside of the body of a member function for a type that is currently\nbeing defined.\n\n:Parameter:\n    `BaseType` (:cpp:class:`::clang::QualType`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("declare_global_new_delete", method_pointer_12e2c2f531c055c690fd050923834c64, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("find_deallocation_function_for_destructor", method_pointer_ba18771b271c531eaf1d16ef2a0112b3, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_virtual_dtor_call", method_pointer_472c17f6a13b58ef96cf4363c3d65736, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("compute_decl_context", method_pointer_d7715019eaa1546a9d68b4633aeb9dcc, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("define_implicit_lambda_to_function_pointer_conversion", method_pointer_96e365c308cf5b3d86ab0bbae9a20f8b, "Define the “body” of the conversion from a lambda object to a function\npointer.\n\nThis routine doesn’t actually define a sensible body; rather, it fills\nin the initialization expression needed to copy the lambda object into\nthe block, and IR generation actually generates the real body of the\nblock pointer conversion.\n\n:Parameters:\n  - `CurrentLoc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `Conv` (:cpp:class:`::clang::CXXConversionDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("define_implicit_lambda_to_block_pointer_conversion", method_pointer_f90c1b8266e25ceeae653ce49bba5da6, "Define the “body” of the conversion from a lambda object to a block\npointer.\n\nThis routine doesn’t actually define a sensible body; rather, it fills\nin the initialization expression needed to copy the lambda object into\nthe block, and IR generation actually generates the real body of the\nblock pointer conversion.\n\n:Parameters:\n  - `CurrentLoc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `Conv` (:cpp:class:`::clang::CXXConversionDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_start_cxx_in_class_member_initializer", method_pointer_87808e830855502f85416b198c3b1abf, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("set_ivar_initializers", method_pointer_c9d671e4925759a3b63650ac38fa824a, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("mark_base_and_member_destructors_referenced", method_pointer_7ee249119d5b583ca8fd7f042f946fe0, ":Parameters:\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `Record` (:cpp:class:`::clang::CXXRecordDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("load_external_v_table_uses", method_pointer_abeafcce15ce50bcb0cc99db972d4f72, "Load any externally-stored vtable uses.\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("mark_v_table_used", method_pointer_c5e3199c6900599084e9d8ee7561e6ce, "Note that the vtable for the given class was used at the given location.\n\n:Parameters:\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `Class` (:cpp:class:`::clang::CXXRecordDecl`) - Undocumented\n  - `DefinitionRequired` (:cpp:any:`bool`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("mark_virtual_member_exception_specs_needed", method_pointer_f59df23c55875a6e8de615320db42c06, "Mark the exception specifications of all virtual member functions in the\ngiven class as needed.\n\n:Parameters:\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `RD` (:cpp:class:`::clang::CXXRecordDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("mark_virtual_members_referenced", method_pointer_913cc2b2968a53c79142fd6c73ef8586, ":Parameters:\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `RD` (:cpp:class:`::clang::CXXRecordDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("define_used_v_tables", method_pointer_c753168407e754d49d7e18efa6b5cab3, "Define all of the vtables that have been used in this translation unit\nand reference any virtual members used by those vtables.\n\n:Returns:\n    true if any work was done, false otherwise.\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("add_implicitly_declared_members_to_class", method_pointer_66ece0ce7e6059ad90c84dee15103444, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_class_level_dll_attribute", method_pointer_dd660ae06f3b504cb88284469f97830e, "Check class-level dllimport/dllexport attribute. The caller must ensure\nthat referenceDLLExportedClassMethods is called some point later when\nall outer classes of Class are complete.\n\n:Parameter:\n    `Class` (:cpp:class:`::clang::CXXRecordDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("reference_dll_exported_class_methods", method_pointer_1f0740e5335f512e8af7465c24856286, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_completed_cxx_class", method_pointer_22df5321ba21536db77e72315c312a66, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_finish_cxx_member_decls", method_pointer_8050a512b21d55078651d0b9c61cddb9, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_finish_cxx_non_nested_class", method_pointer_0e1fa58b2abd57b79be4e715736274b3, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_finish_delayed_member_initializers", method_pointer_e3e0e65aefc4547fa2e638ede30fa0bd, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("unmark_as_late_parsed_template", method_pointer_56a61415f7f855eab5231afeeccd8942, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_inside_a_local_class_within_a_template_function", method_pointer_375db722eea15edcb71d5f4e76a04117, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_constructor", method_pointer_84d77df3e42451c38a3c03d24c8fa982, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_destructor", method_pointer_6cf576c9638a590c9711464a8d1fe968, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_conversion_declarator", method_pointer_0c922e2275195467951435a06273546b, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_explicitly_defaulted_special_member", method_pointer_a3ba8cb36d395ba2a9cea6af5e35b4c2, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_explicitly_defaulted_member_exception_spec", method_pointer_ce82ed9d7bed50cfbee39cce85a10014, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_delayed_member_exception_specs", method_pointer_8552a86b05f25cb7b4a0ba76e6464e40, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_derived_from", method_pointer_0f605ca8940d5b9280a1567c3f69b2e7, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_overriding_function_attributes", method_pointer_e60e38d1548f59b3bb6a4f9c90a91ede, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_overriding_function_return_type", method_pointer_9063f91ec8f5518088b6217a95c2ff61, ":Parameters:\n  - `New` (:cpp:class:`::clang::CXXMethodDecl`) - Undocumented\n  - `Old` (:cpp:class:`::clang::CXXMethodDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_overriding_function_exception_spec", method_pointer_140a031cb3b15d2db506670acdf75081, ":Parameters:\n  - `New` (:cpp:class:`::clang::CXXMethodDecl`) - Undocumented\n  - `Old` (:cpp:class:`::clang::CXXMethodDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_override_control", method_pointer_c1f98e268637518c97af8b0ab8c45b75, ":Parameter:\n    `D` (:cpp:class:`::clang::NamedDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_absence_of_override_control", method_pointer_586c40a65a4457549ecce29a5559d6af, ":Parameter:\n    `D` (:cpp:class:`::clang::NamedDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_if_overridden_function_is_marked_final", method_pointer_8c84be55e1bb513fb6287b1ec74f57a0, ":Parameters:\n  - `New` (:cpp:class:`::clang::CXXMethodDecl`) - Undocumented\n  - `Old` (:cpp:class:`::clang::CXXMethodDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("set_member_access_specifier", method_pointer_652a8f73ccf85e14bcdd8ea770d5ee38, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_simply_accessible", method_pointer_fd192dc29fa95742ac27cea3c2221299, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_special_member_accessible_for_deletion", method_pointer_6c48e22b776f5fefb81d0559e13511be, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_abstract_type", method_pointer_0d50262b94135874ac14931956c71856, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_abstract_type", method_pointer_cc3fc19ca18758b19a1e6d7077e904ce, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_overloaded_operator_declaration", method_pointer_bee820d4efdb5459bd34ceed0a14750d, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_literal_operator_declaration", method_pointer_ec10fd1ecb795b1b8877580ea8b67415, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_template_parameter_shadow", method_pointer_152230b9b793543eb074f05f3c70b456, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_non_type_template_parameter_type", method_pointer_6fc58efc4bb85838bcee343458c8dbd4, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_template_partial_specialization", method_pointer_031a4088bf7e5e72a905d08a04885d0b, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_template_partial_specialization", method_pointer_8b25f1b103235b1cac944dc0a783474a, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_unexpanded_parameter_pack_permitted", method_pointer_d3b84e31461654eaaa7f391df99cf5ed, ":Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("adjust_cc_and_no_return", method_pointer_c89151d9e84355659d1f4de30efebf0c, ":Parameters:\n  - `ArgFunctionType` (:cpp:class:`::clang::QualType`) - Undocumented\n  - `FunctionType` (:cpp:class:`::clang::QualType`) - Undocumented\n  - `AdjustExceptionSpec` (:cpp:any:`bool`) - Undocumented\n\n:Return Type:\n    :cpp:class:`::clang::QualType`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("subst_auto_type", method_pointer_8fff314a318257c4804507a924fb8099, "Substitute Replacement for :raw-latex:`\\p `auto in\n:raw-latex:`\\p `TypeWithAuto\n\n:Parameters:\n  - `TypeWithAuto` (:cpp:class:`::clang::QualType`) - Undocumented\n  - `Replacement` (:cpp:class:`::clang::QualType`) - Undocumented\n\n:Return Type:\n    :cpp:class:`::clang::QualType`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("deduce_return_type", method_pointer_0856d5aff63851aa89afbbbbb7421be0, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_more_specialized_partial_specialization", method_pointer_baad3be47ef959dca2144300fe490b2f, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_more_specialized_partial_specialization", method_pointer_e4634dcd21e95e1b87b0068cc97abfe0, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("print_instantiation_stack", method_pointer_ae6995bddd7451d6acd9a2cd316db40c, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_unevaluated_context", method_pointer_4ee4a0d382b15231bbb320fa83c9fb31, "Determines whether we are currently in a context that is not evaluated\nas per C++ [expr] p5.\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("perform_pending_instantiations", method_pointer_08d61afc4ed952cb8db47d7ffdc78599, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("instantiate_exception_spec", method_pointer_7ff5aa2f8dfc56d7ba3fe497bde79406, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("instantiate_function_definition", method_pointer_bf9196a3547a5730b88ba4074300d817, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("instantiate_variable_definition", method_pointer_f893ae98a0d95b8784e66d8e845a79f7, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("instantiate_static_data_member_definition", method_pointer_872da6116a245612b82c951e1c139ebe, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_obj_c_kind_of_type", method_pointer_15ce507a4e435ac58f85a1c2e84eec95, ":Parameters:\n  - `type` (:cpp:class:`::clang::QualType`) - Undocumented\n  - `loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_obj_c_property_attributes", method_pointer_17ef952ed8b759c7997838ebe2f1af36, ":Parameters:\n  - `PropertyPtrTy` (:cpp:class:`::clang::Decl`) - Undocumented\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `Attributes` (:cpp:any:`unsigned` int) - Undocumented\n  - `propertyInPrimaryClass` (:cpp:any:`bool`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("process_property_decl", method_pointer_093d7ba32ab253479bf681be7bc5cc26, ":Parameter:\n    `property` (:cpp:class:`::clang::ObjCPropertyDecl`) - The property declaration being processed\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_class_extension_dup_methods", method_pointer_68e5811c60115312b678049fafde528d, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_arc_method_decl", method_pointer_b79fb18c5dda579097a9d2bc91a05734, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("infer_obj_carc_lifetime", method_pointer_5d1dba6d02075cf3a4d60f90d664fabd, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("try_capture_obj_c_self", method_pointer_fd3bc3c173a957afaac278054832009f, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_init_method", method_pointer_accf16fc4cd15596bd3a6fd14c271ccc, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_obj_c_method_override", method_pointer_e3040b002f3153e0ba129f26bb3759a0, "Check whether the given new method is a valid override of the given\noverridden method, and set any properties that should be inherited.\n\n:Parameters:\n  - `NewMethod` (:cpp:class:`::clang::ObjCMethodDecl`) - Undocumented\n  - `Overridden` (:cpp:class:`::clang::ObjCMethodDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("unify_section", method_pointer_b5dabcc6a6b2579db20ec55ae953d60b, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("unify_section", method_pointer_68f120ef072c57c89c3e7490cb611fd1, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_pragma_detect_mismatch", method_pointer_7381cc0469215302b46368f576bf3a16, ":Parameters:\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `Name` (:cpp:class:`::llvm::StringRef`) - Undocumented\n  - `Value` (:cpp:class:`::llvm::StringRef`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("add_alignment_attributes_for_record", method_pointer_11bbf744254e51848144d97d38a28fbd, ":Parameter:\n    `RD` (:cpp:class:`::clang::RecordDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("add_ms_struct_layout_for_record", method_pointer_0e46198a43a15deeb30b1d1fa315448d, ":Parameter:\n    `RD` (:cpp:class:`::clang::RecordDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("free_packed_context", method_pointer_3f1db22e81835aca9b208a18d07c5c94, ":Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("add_pushed_visibility_attribute", method_pointer_9045e2ad93c053dbaec4b93c4b50e1d9, ":Parameter:\n    `RD` (:cpp:class:`::clang::Decl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("pop_pragma_visibility", method_pointer_ba20403dcbb5519382a98d145490248b, ":Parameters:\n  - `IsNamespaceEnd` (:cpp:any:`bool`) - Undocumented\n  - `EndLoc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("free_vis_context", method_pointer_9b4538195e455b4baae0cc784b59639d, ":Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("add_cf_audited_attribute", method_pointer_c68f23f59d185c2d8f847d84888350c7, ":Parameter:\n    `D` (:cpp:class:`::clang::Decl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_pragma_optimize", method_pointer_62758aa623db5258aa3289ccdbe521ae, "Called on well formed #pragma clang optimize.\n\n:Parameters:\n  - `On` (:cpp:any:`bool`) - Undocumented\n  - `PragmaLoc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_optimize_off_pragma_location", method_pointer_62de525bf8a058b19dc66842b9525a2b, "Get the location for the currently active “#pragma clang optimize off”.\nIf this location is invalid, then the state of the pragma is “on”.\n\n:Return Type:\n    :cpp:class:`::clang::SourceLocation`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("add_range_based_optnone", method_pointer_2b67dc7af75954f3be69044eaead8d3b, "Only called on function definitions; if there is a pragma in scope with\nthe effect of a range-based optnone, consider marking the function with\nattribute optnone.\n\n:Parameter:\n    `FD` (:cpp:class:`::clang::FunctionDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("add_optnone_attribute_if_no_conflicts", method_pointer_7268d4a7fc54535f989444f59a7e5984, "Adds the ‘optnone’ attribute to the function declaration if there are no\nconflicts; Loc represents the location causing the ‘optnone’ attribute\nto be added (usually because of a pragma).\n\n:Parameters:\n  - `FD` (:cpp:class:`::clang::FunctionDecl`) - Undocumented\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_current_open_cl_extension", method_pointer_5c8e5e46324c53c2a9410068f5aaf88f, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("set_current_open_cl_extension", method_pointer_b8accf24a0695be8b449c59375ea23f3, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("set_open_cl_extension_for_type", method_pointer_064f2454f6ad53329e35b3e47da12523, "Set OpenCL extensions for a type which can only be used when these\nOpenCL extensions are enabled. If :raw-latex:`\\p `Exts is empty, do\nnothing.\n\n:Parameters:\n  - `T` (:cpp:class:`::clang::QualType`) - Undocumented\n  - `Exts` (:cpp:class:`::llvm::StringRef`) - A space separated list of OpenCL extensions.\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("set_open_cl_extension_for_decl", method_pointer_cb7f0654ad6e52178f08b1110c670328, "Set OpenCL extensions for a declaration which can only be used when\nthese OpenCL extensions are enabled. If :raw-latex:`\\p `Exts is empty,\ndo nothing.\n\n:Parameters:\n  - `FD` (:cpp:class:`::clang::Decl`) - Undocumented\n  - `Exts` (:cpp:class:`::llvm::StringRef`) - A space separated list of OpenCL extensions.\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("set_current_open_cl_extension_for_type", method_pointer_9a98e8a4c4db52838d2e86b63b08fc24, "Set current OpenCL extensions for a type which can only be used when\nthese OpenCL extensions are enabled. If current OpenCL extension is\nempty, do nothing.\n\n:Parameter:\n    `T` (:cpp:class:`::clang::QualType`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("set_current_open_cl_extension_for_decl", method_pointer_3874bced21f65b14b3f20a39d95195dc, "Set current OpenCL extensions for a declaration which can only be used\nwhen these OpenCL extensions are enabled. If current OpenCL extension is\nempty, do nothing.\n\n:Parameter:\n    `FD` (:cpp:class:`::clang::Decl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_open_cl_disabled_decl", method_pointer_0ff768176e4053a599bc1d557c52f5be, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_open_mp_captured_by_ref", method_pointer_0d5501b20b5f522a85bf713bf38784f4, "Return true if the provided declaration :raw-latex:`\\a `VD should be\ncaptured by reference.\n\n:Parameters:\n  - `D` (:cpp:class:`::clang::ValueDecl`) - Undocumented\n  - `Level` (:cpp:any:`unsigned` int) - Relative level of nested OpenMP construct for that the check is\n                                        performed.\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_open_mp_captured_decl", method_pointer_4068331c19a1576ea15ad769fa74c2ff, pybind11::return_value_policy::reference_internal, "Check if the specified variable is used in one of the private clauses\n(private, firstprivate, lastprivate, reduction etc.) in OpenMP\nconstructs.\n\n:Parameter:\n    `D` (:cpp:class:`::clang::ValueDecl`) - Undocumented\n\n:Return Type:\n    :cpp:class:`::clang::VarDecl`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_open_mp_private_decl", method_pointer_7c06abfb0f97582cb1f623fd2e1ce9cf, "Check if the specified variable is used in ‘private’ clause.\n\n:Parameters:\n  - `D` (:cpp:class:`::clang::ValueDecl`) - Undocumented\n  - `Level` (:cpp:any:`unsigned` int) - Relative level of nested OpenMP construct for that the check is\n                                        performed.\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_open_mp_target_captured_decl", method_pointer_92b6687296c75b90905b6b2e5ca53e53, "Check if the specified variable is captured by ‘target’ directive.\n\n:Parameters:\n  - `D` (:cpp:class:`::clang::ValueDecl`) - Undocumented\n  - `Level` (:cpp:any:`unsigned` int) - Relative level of nested OpenMP construct for that the check is\n                                        performed.\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("end_open_mp_clause", method_pointer_7899a7d9b4a0582d8b3541fdfbd8f8e0, "End analysis of clauses.\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_start_open_mp_declare_target_directive", method_pointer_b78f73f2e21555cd97dedcabca1e80d8, ":Parameter:\n    `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("act_on_finish_open_mp_declare_target_directive", method_pointer_60194a00898e5bd892a5e183f3c421ab, ":Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_in_open_mp_declare_target_context", method_pointer_4c01c6e3dd7b5b209e167b31ac433f7f, ":Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_signed_vector_type", method_pointer_660bde7d208b5dd28f96b4f4d2f6d48d, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("are_lax_compatible_vector_types", method_pointer_f8e176f887815776bd58d1544adb82e5, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_lax_vector_conversion", method_pointer_8fb66e876e2858e89df2958a1d8a868f, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_obj_carc_unavailable_weak_conversion", method_pointer_364f075f181f5bed9a79106318f81798, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_message_send_result_type", method_pointer_05b81a1acf275258847c410b693ff53f, "Determine the result of a message send expression based on the type of\nthe receiver, the method expected to receive the message, and the form\nof the message send.\n\n:Parameters:\n  - `ReceiverType` (:cpp:class:`::clang::QualType`) - Undocumented\n  - `Method` (:cpp:class:`::clang::ObjCMethodDecl`) - Undocumented\n  - `isClassMessage` (:cpp:any:`bool`) - Undocumented\n  - `isSuperMessage` (:cpp:any:`bool`) - Undocumented\n\n:Return Type:\n    :cpp:class:`::clang::QualType`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("emit_related_result_type_note_for_return", method_pointer_b8677b478e6e51b3b4cc79fb94ed375f, "Given that we had incompatible pointer types in a return statement,\ncheck whether we’re in a method with a related result type, and if so,\nemit a note describing what happened.\n\n:Parameter:\n    `destType` (:cpp:class:`::clang::QualType`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_obj_c_decl_scope", method_pointer_04b45b883ecf513dae1a1572d8284cfd, ":Parameter:\n    `D` (:cpp:class:`::clang::Decl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("push_force_cuda_host_device", method_pointer_17e29d9414c35d4c97279a5b30bd49ab, ":Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("pop_force_cuda_host_device", method_pointer_eb002e93382a56e88bdad6bd353365e0, ":Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_allowed_cuda_call", method_pointer_a4bea69970b75d9385fb3c9ee86dc22b, ":Parameters:\n  - `Caller` (:cpp:class:`::clang::FunctionDecl`) - Undocumented\n  - `Callee` (:cpp:class:`::clang::FunctionDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("check_cuda_call", method_pointer_4bbc80ee1b865158a668df81c6434c6c, ":Parameters:\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `Callee` (:cpp:class:`::clang::FunctionDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("cuda_set_lambda_attrs", method_pointer_83258306aed05b7cbc6c40ddd754fa91, ":Parameter:\n    `Method` (:cpp:class:`::clang::CXXMethodDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_empty_cuda_constructor", method_pointer_07a5d873df99590b865afc36a7f6868f, ":Parameters:\n  - `Loc` (:cpp:class:`::clang::SourceLocation`) - Undocumented\n  - `CD` (:cpp:class:`::clang::CXXConstructorDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("is_empty_cuda_destructor", method_pointer_46c4daab3cde5e6eb7c846521b4e2037, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("inherit_cuda_target_attrs", method_pointer_0920f5d0796f5278b0e39fd97577cfb5, ":Parameters:\n  - `FD` (:cpp:class:`::clang::FunctionDecl`) - Undocumented\n  - `TD` (:cpp:class:`::clang::FunctionTemplateDecl`) - Undocumented\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("code_complete_preprocessor_directive", method_pointer_ad321085bd165f6aa15605dfe8cd9bd0, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("code_complete_preprocessor_macro_name", method_pointer_ec3b26b16b63506b86981ab98b0b9b73, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("code_complete_preprocessor_expression", method_pointer_aa1c5f0d78fb586f980d339c89e022a4, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("code_complete_natural_language", method_pointer_8b363788671553528501df65e417485c, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("increment_ms_mangling_number", method_pointer_09146387f7c550178999daeba135d15d, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_obj_c_decl_context", method_pointer_7dc27192b1fd5d00a5c59472035c52f0, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_cur_lexical_context", method_pointer_b08bc0fb9d985004b7692dc68194d604, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def("get_cur_obj_c_lexical_context", method_pointer_6d5ef056b03b54a898e463925f1f4e63, pybind11::return_value_policy::reference_internal, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_static("too_many_arguments", method_pointer_7b151e77b874548ca22ddaa1035592bd, "To be used for checking whether the arguments being passed to function\nexceeds the number of parameters expected for it.\n\n:Parameters:\n  - `NumParams` (:cpp:any:`unsigned` long int) - Undocumented\n  - `NumArgs` (:cpp:any:`unsigned` long int) - Undocumented\n  - `PartialOverloading` (:cpp:any:`bool`) - Undocumented\n\n:Return Type:\n    :cpp:any:`bool`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def("diagnose_misaligned_members", method_pointer_1d7cb1c1ea555470afa2ab76c07cff9d, "Diagnoses the current set of gathered accesses. This typically happens\nat full expression level. The set is cleared after emitting the\ndiagnostics.\n\n:Return Type:\n    :cpp:any:`void`\n\n");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("collect_stats", &::clang::Sema::CollectStats, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("ms_struct_pragma_on", &::clang::Sema::MSStructPragmaOn, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("implicit_ms_inheritance_attr_loc", &::clang::Sema::ImplicitMSInheritanceAttrLoc, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readonly_static("k_mac_6_8k_alignment_sentinel", &::clang::Sema::kMac68kAlignmentSentinel, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("cur_init_seg_loc", &::clang::Sema::CurInitSegLoc, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("optimize_off_pragma_location", &::clang::Sema::OptimizeOffPragmaLocation, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("is_building_recovery_call_expr", &::clang::Sema::IsBuildingRecoveryCallExpr, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("ns_number_pointer", &::clang::Sema::NSNumberPointer, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("ns_value_pointer", &::clang::Sema::NSValuePointer, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("ns_string_pointer", &::clang::Sema::NSStringPointer, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("qidns_copying", &::clang::Sema::QIDNSCopying, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("global_new_delete_declared", &::clang::Sema::GlobalNewDeleteDeclared, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("allow_abstract_field_reference", &::clang::Sema::AllowAbstractFieldReference, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("num_sfinae_errors", &::clang::Sema::NumSFINAEErrors, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("cxx_this_type_override", &::clang::Sema::CXXThisTypeOverride, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("access_checking_sfinae", &::clang::Sema::AccessCheckingSFINAE, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("in_non_instantiation_sfinae_context", &::clang::Sema::InNonInstantiationSFINAEContext, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("non_instantiation_entries", &::clang::Sema::NonInstantiationEntries, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("argument_pack_substitution_index", &::clang::Sema::ArgumentPackSubstitutionIndex, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("disable_typo_correction", &::clang::Sema::DisableTypoCorrection, "");
    class_334dd7441b7b543eae5426f290fe3a91.def_readwrite("typos_corrected", &::clang::Sema::TyposCorrected, "");

}