#include <boost/python.hpp>

void enumeration_clang_builtin_type_kind();
void class_clang_qual_type();
void class_clang_global_decl();
void class_clang_cxx_base_specifier();
void enumeration_clang_type_type_class();
void export_namespace_clang_cast();
void export_namespace_clang_tooling();
void class_clang_split_qual_type();
void class_clang_any_function_decl();
void enumeration_clang_access_specifier();
void enumeration_clang_decl_kind();
void class_llvm_string_ref();
void class_clang_decl_context();
void class_clang_decl();
void class_clang_template_argument_list();
void class_clang_source_location();
void enumeration_clang_linkage_spec_decl_language_i_ds();
void class_clang_template_argument();
void class_clang_file_id();
void enumeration_clang_template_argument_arg_kind();
void class_clang_extern_c_context_decl();
void class_clang_ast_unit();
void class_clang_type();
void class_clang_translation_unit_decl();
void class_clang_captured_decl();
void class_clang_named_decl();
void class_clang_friend_template_decl();
void class_clang_ast_context();
void class_clang_linkage_spec_decl();
void class_clang_source_manager();
void class_clang_empty_decl();
void class_clang_friend_decl();
void class_clang_pretty_stack_trace_decl();
void class_clang_access_spec_decl();
void class_clang_class_scope_function_specialization_decl();
void class_clang_omp_thread_private_decl();
void class_clang_static_assert_decl();
void class_clang_obj_c_property_impl_decl();
void class_clang_import_decl();
void class_clang_file_scope_asm_decl();
void class_clang_block_decl();
void class_clang_label_decl();
void class_clang_obj_c_container_decl();
void class_clang_reference_type();
void class_clang_namespace_decl();
void class_clang_block_pointer_type();
void class_clang_paren_type();
void class_clang_unresolved_using_type();
void class_clang_namespace_alias_decl();
void class_clang_pointer_type();
void class_clang_adjusted_type();
void class_clang_typedef_type();
void class_clang_value_decl();
void class_clang_decltype_type();
void class_clang_vector_type();
void class_clang_function_type();
void class_clang_complex_type();
void class_clang_dependent_sized_ext_vector_type();
void class_clang_obj_c_method_decl();
void class_clang_obj_c_property_decl();
void class_clang_template_specialization_type();
void class_clang_template_type_parm_type();
void class_clang_obj_c_compatible_alias_decl();
void class_clang_obj_c_object_type();
void class_clang_using_shadow_decl();
void class_clang_injected_class_name_type();
void class_clang_using_decl();
void class_clang_using_directive_decl();
void class_clang_member_pointer_type();
void class_clang_auto_type();
void class_clang_obj_c_object_pointer_type();
void class_clang_type_of_expr_type();
void class_clang_builtin_type();
void class_clang_subst_template_type_parm_pack_type();
void class_clang_atomic_type();
void class_clang_attributed_type();
void class_clang_tag_type();
void class_clang_type_decl();
void class_clang_pack_expansion_type();
void class_clang_template_decl();
void class_clang_subst_template_type_parm_type();
void class_clang_array_type();
void class_clang_unary_transform_type();
void class_clang_type_of_type();
void class_clang_dependent_template_specialization_type();
void class_clang_redeclarable_template_decl();
void class_clang_template_type_parm_decl();
void class_clang_template_template_parm_decl();
void class_clang_typedef_name_decl();
void class_clang_dependent_sized_array_type();
void class_clang_obj_c_category_decl();
void class_clang_obj_c_interface_decl();
void class_clang_unresolved_using_typename_decl();
void class_clang_incomplete_array_type();
void class_clang_obj_c_interface_type();
void class_clang_obj_c_protocol_decl();
void class_clang_decayed_type();
void class_clang_variable_array_type();
void class_clang_elaborated_type();
void class_clang_declarator_decl();
void class_clang_dependent_name_type();
void class_clang_dependent_decltype_type();
void class_clang_r_value_reference_type();
void class_clang_obj_c_impl_decl();
void class_clang_constant_array_type();
void class_clang_ext_vector_type();
void class_clang_enum_type();
void class_clang_dependent_type_of_expr_type();
void class_clang_record_type();
void class_clang_tag_decl();
void class_clang_unresolved_using_value_decl();
void class_clang_function_proto_type();
void class_clang_indirect_field_decl();
void class_clang_function_no_proto_type();
void class_clang_enum_constant_decl();
void class_clang_l_value_reference_type();
void class_clang_function_template_decl();
void class_clang_obj_c_implementation_decl();
void class_clang_record_decl();
void class_clang_type_alias_template_decl();
void class_clang_non_type_template_parm_decl();
void class_clang_typedef_decl();
void class_clang_type_alias_decl();
void class_clang_var_template_decl();
void class_clang_class_template_decl();
void class_clang_ms_property_decl();
void class_clang_var_decl();
void class_clang_field_decl();
void class_clang_obj_c_category_impl_decl();
void class_clang_function_decl();
void class_clang_enum_decl();
void class_clang_obj_c_ivar_decl();
void class_clang_obj_c_at_defs_field_decl();
void class_clang_parm_var_decl();
void class_clang_cxx_record_decl();
void class_clang_cxx_method_decl();
void class_clang_implicit_param_decl();
void class_clang_var_template_specialization_decl();
void class_clang_var_template_partial_specialization_decl();
void class_clang_cxx_conversion_decl();
void class_clang_cxx_destructor_decl();
void class_clang_class_template_specialization_decl();
void class_clang_cxx_constructor_decl();
void class_clang_class_template_partial_specialization_decl();

BOOST_PYTHON_MODULE(__clanglite)
{
    enumeration_clang_builtin_type_kind();
    class_clang_qual_type();
    class_clang_global_decl();
    class_clang_cxx_base_specifier();
    enumeration_clang_type_type_class();
    export_namespace_clang_cast();
    export_namespace_clang_tooling();
    class_clang_split_qual_type();
    class_clang_any_function_decl();
    enumeration_clang_access_specifier();
    enumeration_clang_decl_kind();
    class_llvm_string_ref();
    class_clang_decl_context();
    class_clang_decl();
    class_clang_template_argument_list();
    class_clang_source_location();
    enumeration_clang_linkage_spec_decl_language_i_ds();
    class_clang_template_argument();
    class_clang_file_id();
    enumeration_clang_template_argument_arg_kind();
    class_clang_extern_c_context_decl();
    class_clang_ast_unit();
    class_clang_type();
    class_clang_translation_unit_decl();
    class_clang_captured_decl();
    class_clang_named_decl();
    class_clang_friend_template_decl();
    class_clang_ast_context();
    class_clang_linkage_spec_decl();
    class_clang_source_manager();
    class_clang_empty_decl();
    class_clang_friend_decl();
    class_clang_pretty_stack_trace_decl();
    class_clang_access_spec_decl();
    class_clang_class_scope_function_specialization_decl();
    class_clang_omp_thread_private_decl();
    class_clang_static_assert_decl();
    class_clang_obj_c_property_impl_decl();
    class_clang_import_decl();
    class_clang_file_scope_asm_decl();
    class_clang_block_decl();
    class_clang_label_decl();
    class_clang_obj_c_container_decl();
    class_clang_reference_type();
    class_clang_namespace_decl();
    class_clang_block_pointer_type();
    class_clang_paren_type();
    class_clang_unresolved_using_type();
    class_clang_namespace_alias_decl();
    class_clang_pointer_type();
    class_clang_adjusted_type();
    class_clang_typedef_type();
    class_clang_value_decl();
    class_clang_decltype_type();
    class_clang_vector_type();
    class_clang_function_type();
    class_clang_complex_type();
    class_clang_dependent_sized_ext_vector_type();
    class_clang_obj_c_method_decl();
    class_clang_obj_c_property_decl();
    class_clang_template_specialization_type();
    class_clang_template_type_parm_type();
    class_clang_obj_c_compatible_alias_decl();
    class_clang_obj_c_object_type();
    class_clang_using_shadow_decl();
    class_clang_injected_class_name_type();
    class_clang_using_decl();
    class_clang_using_directive_decl();
    class_clang_member_pointer_type();
    class_clang_auto_type();
    class_clang_obj_c_object_pointer_type();
    class_clang_type_of_expr_type();
    class_clang_builtin_type();
    class_clang_subst_template_type_parm_pack_type();
    class_clang_atomic_type();
    class_clang_attributed_type();
    class_clang_tag_type();
    class_clang_type_decl();
    class_clang_pack_expansion_type();
    class_clang_template_decl();
    class_clang_subst_template_type_parm_type();
    class_clang_array_type();
    class_clang_unary_transform_type();
    class_clang_type_of_type();
    class_clang_dependent_template_specialization_type();
    class_clang_redeclarable_template_decl();
    class_clang_template_type_parm_decl();
    class_clang_template_template_parm_decl();
    class_clang_typedef_name_decl();
    class_clang_dependent_sized_array_type();
    class_clang_obj_c_category_decl();
    class_clang_obj_c_interface_decl();
    class_clang_unresolved_using_typename_decl();
    class_clang_incomplete_array_type();
    class_clang_obj_c_interface_type();
    class_clang_obj_c_protocol_decl();
    class_clang_decayed_type();
    class_clang_variable_array_type();
    class_clang_elaborated_type();
    class_clang_declarator_decl();
    class_clang_dependent_name_type();
    class_clang_dependent_decltype_type();
    class_clang_r_value_reference_type();
    class_clang_obj_c_impl_decl();
    class_clang_constant_array_type();
    class_clang_ext_vector_type();
    class_clang_enum_type();
    class_clang_dependent_type_of_expr_type();
    class_clang_record_type();
    class_clang_tag_decl();
    class_clang_unresolved_using_value_decl();
    class_clang_function_proto_type();
    class_clang_indirect_field_decl();
    class_clang_function_no_proto_type();
    class_clang_enum_constant_decl();
    class_clang_l_value_reference_type();
    class_clang_function_template_decl();
    class_clang_obj_c_implementation_decl();
    class_clang_record_decl();
    class_clang_type_alias_template_decl();
    class_clang_non_type_template_parm_decl();
    class_clang_typedef_decl();
    class_clang_type_alias_decl();
    class_clang_var_template_decl();
    class_clang_class_template_decl();
    class_clang_ms_property_decl();
    class_clang_var_decl();
    class_clang_field_decl();
    class_clang_obj_c_category_impl_decl();
    class_clang_function_decl();
    class_clang_enum_decl();
    class_clang_obj_c_ivar_decl();
    class_clang_obj_c_at_defs_field_decl();
    class_clang_parm_var_decl();
    class_clang_cxx_record_decl();
    class_clang_cxx_method_decl();
    class_clang_implicit_param_decl();
    class_clang_var_template_specialization_decl();
    class_clang_var_template_partial_specialization_decl();
    class_clang_cxx_conversion_decl();
    class_clang_cxx_destructor_decl();
    class_clang_class_template_specialization_decl();
    class_clang_cxx_constructor_decl();
    class_clang_class_template_partial_specialization_decl();
}