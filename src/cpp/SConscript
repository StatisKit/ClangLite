## Copyright [2017-2018] UMR MISTEA INRA, UMR LEPSE INRA,                ##
##                       UMR AGAP CIRAD, EPI Virtual Plants Inria        ##
## Copyright [2015-2016] UMR AGAP CIRAD, EPI Virtual Plants Inria        ##
##                                                                       ##
## This file is part of the AutoWIG project. More information can be     ##
## found at                                                              ##
##                                                                       ##
##     http://autowig.rtfd.io                                            ##
##                                                                       ##
## The Apache Software Foundation (ASF) licenses this file to you under  ##
## the Apache License, Version 2.0 (the "License"); you may not use this ##
## file except in compliance with the License. You should have received  ##
## a copy of the Apache License, Version 2.0 along with this file; see   ##
## the file LICENSE. If not, you may obtain a copy of the License at     ##
##                                                                       ##
##     http://www.apache.org/licenses/LICENSE-2.0                        ##
##                                                                       ##
## Unless required by applicable law or agreed to in writing, software   ##
## distributed under the License is distributed on an "AS IS" BASIS,     ##
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       ##
## mplied. See the License for the specific language governing           ##
## permissions and limitations under the License.                        ##

# -*-python-*-

import os
from SCons.Errors import EnvironmentError

Import("env")

cppenv = env.Clone(tools = ['cpp'])

cppenv.AppendUnique(CPPDEFINES = ['BUILD_LIBCLANGLITE'])

exclude = """
""".split()

sources = [source for source in cppenv.Glob('*.h*') if not source.name in exclude]

targets = cppenv.CppDev("clanglite", sources)
Alias("cpp-dev", targets)
Alias("cpp", targets)
Alias("autowig", targets)
Alias("install", targets)

try:
    wigenv = cppenv.Clone(tools = ['pybind11_wig'])

    targets = wigenv.PyBind11WIG('clanglite', [target for target in targets if target.name.endswith('.h')],
                                    module='../py/_clanglite.cpp',
                                    decorator='../py/clanglite/_clanglite.py',
                                    parser_bootstrap=False,
                                    controller='AutoWIG.py',
                                    generator='pybind11_pattern',
                                    generator_closure=False,
                                    depends=[])

    Alias("autowig", targets)
    wigenv.Depends(targets, "cpp-dev")
except EnvironmentError:
    Alias("autowig", [])
    pass
except Exception:
    raise

exclude = """
""".split()

sources = [source for source in cppenv.Glob('*.cpp') if not source.name in exclude]

targets = cppenv.CppLib("clanglite", sources)
Alias("cpp-lib", targets)
Alias("cpp", targets)
Alias("install", targets)